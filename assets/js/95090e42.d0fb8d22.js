"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5040],{32666:(e,t,n)=>{n.d(t,{Z:()=>u});var a=n(67294),o=n(97405),l=n(22808),s=n(30433),r=n(41284),i=n(36005);const c=e=>{let{props:t}=e;return t?a.createElement(a.Fragment,null,i.ZP.isEmpty(t)?a.createElement("pre",{className:"preText"},"This component does not have props defined"):a.createElement("table",null,a.createElement("thead",null,a.createElement("tr",null,a.createElement("th",null,"Name"),a.createElement("th",null,"Type"),a.createElement("th",null,"Default Value"),a.createElement("th",null,"Required"),a.createElement("th",null,"Description"))),a.createElement("tbody",null,Object.keys(t).map((e=>a.createElement("tr",{key:e},a.createElement("td",null,a.createElement("code",null,e)),a.createElement("td",{style:{minWidth:200}},t[e].type?.name),a.createElement("td",null,t[e].defaultValue&&t[e].defaultValue.value.toString()),a.createElement("td",null,t[e].required?"Yes":"No"),a.createElement("td",null,t[e].description))))))):null};function u(e){const t=(0,r.N)(e.componentName),{description:n,displayName:i,props:u}=t[0],m=`How to use the ${i} component`,p=`Full code for the ${i} component`;return a.createElement(a.Fragment,null,n,a.createElement("br",null),a.createElement("br",null),a.createElement(l.Z,null,a.createElement(s.Z,{value:"props",label:"Properties"},a.createElement(c,{props:u})),a.createElement(s.Z,{value:"example",label:"Example"},e.example&&a.createElement(o.Z,{title:m,className:"language-tsx test"},e.example)),a.createElement(s.Z,{value:"code",label:"Source Code"},e.codeString&&a.createElement(o.Z,{title:p,className:"language-tsx"},e.codeString)),a.createElement(s.Z,{value:"accessibility",label:"Accessibility"},a.createElement("pre",{className:"preText"},e.accessibilityInfo))))}},41284:(e,t,n)=>{n.d(t,{N:()=>o});var a=n(52426);const o=e=>(0,a.ZP)()["docusaurus-plugin-react-docgen-typescript"].default.filter((t=>t.displayName===e))},57446:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>h,exampleString:()=>p,frontMatter:()=>r,metadata:()=>c,toc:()=>m});var a=n(87462),o=(n(67294),n(3905));n(8209),n(97405);const l="import { TouchableWithoutFeedback, TouchableWithoutFeedbackProps } from 'react-native'\nimport { useTranslation } from 'react-i18next'\nimport React, { FC } from 'react'\n\nimport { Box } from './index'\nimport { NAMESPACE } from 'constants/namespaces'\nimport { a11yHintProp, testIdProps } from 'utils/accessibility'\nimport { useTheme } from 'utils/hooks'\nimport TextView from './TextView'\n\ntype SaveButtonProps = {\n  /**function to run on save pressed*/\n  onSave: () => void\n  /**disables this component */\n  disabled: boolean\n  /**a11y hint for this component */\n  a11yHint?: string\n}\n\n/**A common component for the save button located at the header. */\nconst SaveButton: FC<SaveButtonProps> = ({ onSave, disabled, a11yHint }) => {\n  const { t } = useTranslation(NAMESPACE.COMMON)\n  const theme = useTheme()\n\n  const color = disabled ? 'actionBarDisabled' : 'actionBar'\n\n  const props: TouchableWithoutFeedbackProps = {\n    onPress: onSave,\n    disabled,\n    accessibilityRole: 'button',\n    accessible: true,\n    accessibilityState: disabled ? { disabled: true } : { disabled: false },\n  }\n\n  return (\n    <TouchableWithoutFeedback {...props} {...testIdProps('save')} {...a11yHintProp(a11yHint || t('save.a11yHint'))}>\n      <Box pr={theme.dimensions.headerButtonSpacing} height={theme.dimensions.headerHeight} justifyContent={'center'} pl={theme.dimensions.headerLeftButtonFromTextPadding}>\n        <TextView variant=\"ActionBar\" color={color} allowFontScaling={false} accessible={false}>\n          {t('save')}\n        </TextView>\n      </Box>\n    </TouchableWithoutFeedback>\n  )\n}\n\nexport default SaveButton\n";var s=n(32666);const r={},i=void 0,c={unversionedId:"Flagship design library/Components/Buttons and Links/SaveButton",id:"Flagship design library/Components/Buttons and Links/SaveButton",title:"SaveButton",description:"",source:"@site/docs/Flagship design library/Components/Buttons and Links/SaveButton.mdx",sourceDirName:"Flagship design library/Components/Buttons and Links",slug:"/Flagship design library/Components/Buttons and Links/SaveButton",permalink:"/va-mobile-app/docs/Flagship design library/Components/Buttons and Links/SaveButton",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"FooterButton",permalink:"/va-mobile-app/docs/Flagship design library/Components/Buttons and Links/FooterButton"},next:{title:"SignoutButton",permalink:"/va-mobile-app/docs/Flagship design library/Components/Buttons and Links/SignoutButton"}},u={},m=[],p="<SaveButton onPress={() => { console.log('save pressed') }} disabled={false} />",d={toc:m,exampleString:p},b="wrapper";function h(e){let{components:t,...n}=e;return(0,o.kt)(b,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(s.Z,{componentName:"SaveButton",example:p,codeString:l,mdxType:"ComponentTopInfo"}))}h.isMDXComponent=!0}}]);