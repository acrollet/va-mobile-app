"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6495],{38909:function(e,n,t){t.d(n,{Z:function(){return c}});var r=t(67294),o=t(19055),l=t(26396),i=t(58215),a=t(82224),m=t(36005),s=function(e){var n=e.props;return n?r.createElement(r.Fragment,null,m.ZP.isEmpty(n)?r.createElement("pre",{className:"preText"},"This component does not have props defined"):r.createElement("table",null,r.createElement("thead",null,r.createElement("tr",null,r.createElement("th",null,"Name"),r.createElement("th",null,"Type"),r.createElement("th",null,"Default Value"),r.createElement("th",null,"Required"),r.createElement("th",null,"Description"))),r.createElement("tbody",null,Object.keys(n).map((function(e){var t;return r.createElement("tr",{key:e},r.createElement("td",null,r.createElement("code",null,e)),r.createElement("td",{style:{minWidth:200}},null==(t=n[e].type)?void 0:t.name),r.createElement("td",null,n[e].defaultValue&&n[e].defaultValue.value.toString()),r.createElement("td",null,n[e].required?"Yes":"No"),r.createElement("td",null,n[e].description))}))))):null};function c(e){var n=(0,a.N)(e.componentName)[0],t=n.description,m=n.displayName,c=n.props,u="How to use the "+m+" component",p="Full code for the "+m+" component";return r.createElement(r.Fragment,null,t,r.createElement("br",null),r.createElement("br",null),r.createElement(l.Z,null,r.createElement(i.Z,{value:"props",label:"Properties"},r.createElement(s,{props:c})),r.createElement(i.Z,{value:"example",label:"Example"},e.example&&r.createElement(o.Z,{title:u,className:"language-tsx test"},e.example)),r.createElement(i.Z,{value:"code",label:"Source Code"},e.codeString&&r.createElement(o.Z,{title:p,className:"language-tsx"},e.codeString)),r.createElement(i.Z,{value:"accessibility",label:"Accessibility"},r.createElement("pre",{className:"preText"},e.accessibilityInfo))))}},92240:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return s},default:function(){return E},exampleString:function(){return p},frontMatter:function(){return m},metadata:function(){return c},toc:function(){return u}});var r=t(87462),o=t(63366),l=(t(67294),t(3905)),i=(t(19055),t(38909)),a=["components"],m={},s=void 0,c={unversionedId:"Engineering/FrontEnd/ComponentsSection/ErrorComponents/DowntimeError",id:"Engineering/FrontEnd/ComponentsSection/ErrorComponents/DowntimeError",title:"DowntimeError",description:"",source:"@site/docs/Engineering/FrontEnd/ComponentsSection/ErrorComponents/DowntimeError.mdx",sourceDirName:"Engineering/FrontEnd/ComponentsSection/ErrorComponents",slug:"/Engineering/FrontEnd/ComponentsSection/ErrorComponents/DowntimeError",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/ComponentsSection/ErrorComponents/DowntimeError",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"CallHelpCenter",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/ComponentsSection/ErrorComponents/CallHelpCenter"},next:{title:"ErrorComponent",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/ComponentsSection/ErrorComponents/ErrorComponent"}},u=[],p="<DowntimeError screenID={screenID} />",d={toc:u,exampleString:p};function E(e){var n=e.components,t=(0,o.Z)(e,a);return(0,l.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)(i.Z,{componentName:"DowntimeError",example:p,codeString:"import { ViewStyle } from 'react-native'\nimport { useTranslation } from 'react-i18next'\nimport React, { FC } from 'react'\n\nimport { AlertBox, Box, VAScrollView } from 'components'\nimport { DowntimeScreenIDToFeature, ScreenIDTypes } from 'store/api/types'\nimport { ErrorsState } from 'store/slices'\nimport { NAMESPACE } from 'constants/namespaces'\nimport { RootState } from 'store'\nimport { useSelector } from 'react-redux'\nimport { useTheme } from 'utils/hooks'\n\nexport type DowntimeErrorProps = {\n  /**The screen id for the screen that has the errors*/\n  screenID: ScreenIDTypes\n}\n\n/**Common component to show an alert when the service is down*/\nconst DowntimeError: FC<DowntimeErrorProps> = ({ screenID }) => {\n  const { t } = useTranslation(NAMESPACE.COMMON)\n  const theme = useTheme()\n\n  const scrollStyles: ViewStyle = {\n    justifyContent: 'center',\n  }\n\n  const containerStyles = {\n    mx: theme.dimensions.gutter,\n    mt: theme.dimensions.contentMarginTop,\n    mb: theme.dimensions.contentMarginBottom,\n  }\n  const { downtimeWindowsByFeature } = useSelector<RootState, ErrorsState>((state) => state.errors)\n  const feature = DowntimeScreenIDToFeature[screenID]\n  const featureName = downtimeWindowsByFeature[feature]?.featureName\n  const endTime = downtimeWindowsByFeature[feature]?.endTime.toFormat('fff')\n\n  return (\n    <VAScrollView contentContainerStyle={scrollStyles}>\n      <Box justifyContent=\"center\" {...containerStyles}>\n        <AlertBox\n          title={t('downtime.title')}\n          titleA11yLabel={t('downtime.title')}\n          text={t('downtime.message', { featureName, endTime })}\n          textA11yLabel={t('downtime.message', { featureName, endTime })}\n          border=\"warning\"\n        />\n      </Box>\n    </VAScrollView>\n  )\n}\n\nexport default DowntimeError\n",mdxType:"ComponentTopInfo"}))}E.isMDXComponent=!0}}]);