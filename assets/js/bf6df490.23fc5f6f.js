"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6985],{38909:(e,t,n)=>{n.d(t,{Z:()=>m});var o=n(67294),a=n(19055),i=n(26396),s=n(58215),r=n(82224),l=n(36005);const c=e=>{let{props:t}=e;return t?o.createElement(o.Fragment,null,l.ZP.isEmpty(t)?o.createElement("pre",{className:"preText"},"This component does not have props defined"):o.createElement("table",null,o.createElement("thead",null,o.createElement("tr",null,o.createElement("th",null,"Name"),o.createElement("th",null,"Type"),o.createElement("th",null,"Default Value"),o.createElement("th",null,"Required"),o.createElement("th",null,"Description"))),o.createElement("tbody",null,Object.keys(t).map((e=>o.createElement("tr",{key:e},o.createElement("td",null,o.createElement("code",null,e)),o.createElement("td",{style:{minWidth:200}},t[e].type?.name),o.createElement("td",null,t[e].defaultValue&&t[e].defaultValue.value.toString()),o.createElement("td",null,t[e].required?"Yes":"No"),o.createElement("td",null,t[e].description))))))):null};function m(e){const t=(0,r.N)(e.componentName),{description:n,displayName:l,props:m}=t[0],p=`How to use the ${l} component`,u=`Full code for the ${l} component`;return o.createElement(o.Fragment,null,n,o.createElement("br",null),o.createElement("br",null),o.createElement(i.Z,null,o.createElement(s.Z,{value:"props",label:"Properties"},o.createElement(c,{props:m})),o.createElement(s.Z,{value:"example",label:"Example"},e.example&&o.createElement(a.Z,{title:p,className:"language-tsx test"},e.example)),o.createElement(s.Z,{value:"code",label:"Source Code"},e.codeString&&o.createElement(a.Z,{title:u,className:"language-tsx"},e.codeString)),o.createElement(s.Z,{value:"accessibility",label:"Accessibility"},o.createElement("pre",{className:"preText"},e.accessibilityInfo))))}},82224:(e,t,n)=>{n.d(t,{N:()=>a});var o=n(28084);const a=e=>(0,o.default)()["docusaurus-plugin-react-docgen-typescript"].default.filter((t=>t.displayName===e))},4094:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>l,default:()=>C,exampleString:()=>p,frontMatter:()=>r,metadata:()=>c,toc:()=>m});var o=n(87462),a=(n(67294),n(3905));n(95657),n(19055);const i="import { useTranslation } from 'react-i18next'\nimport React, { FC } from 'react'\n\nimport { CtaButton, TextView } from 'components/index'\nimport { NAMESPACE } from 'constants/namespaces'\n\n/**\n *  Signifies the props that need to be passed in to {@link CrisisLineCta}\n */\nexport type CrisisLineCtaProps = {\n  /** function called when the banner is pressed */\n  onPress: () => void\n}\n\n/**\n * Reusable Crisis Line component that shows up as a 'sticky' on the Home screen\n *\n * @returns CrisisLineCta component\n */\nconst CrisisLineCta: FC<CrisisLineCtaProps> = ({ onPress }) => {\n  const { t } = useTranslation(NAMESPACE.HOME)\n\n  const props = { onPress }\n\n  return (\n    <CtaButton {...props}>\n      <TextView color=\"primaryContrast\" variant=\"MobileBody\">\n        {t('component.crisisLine.talkToThe')}\n      </TextView>\n      <TextView color=\"primaryContrast\" variant=\"MobileBodyBold\">\n        &nbsp;{t('component.crisisLine.veteranCrisisLine')}\n      </TextView>\n      <TextView color=\"primaryContrast\" variant=\"MobileBody\">\n        &nbsp;{t('component.crisisLine.now')}\n      </TextView>\n    </CtaButton>\n  )\n}\n\nexport default CrisisLineCta\n";var s=n(38909);const r={},l=void 0,c={unversionedId:"UX/ComponentsSection/Buttons and Links/CrisisLineCta",id:"UX/ComponentsSection/Buttons and Links/CrisisLineCta",title:"CrisisLineCta",description:"",source:"@site/docs/UX/ComponentsSection/Buttons and Links/CrisisLineCta.mdx",sourceDirName:"UX/ComponentsSection/Buttons and Links",slug:"/UX/ComponentsSection/Buttons and Links/CrisisLineCta",permalink:"/va-mobile-app/docs/UX/ComponentsSection/Buttons and Links/CrisisLineCta",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ClickToCallPhoneNumber",permalink:"/va-mobile-app/docs/UX/ComponentsSection/Buttons and Links/ClickToCallPhoneNumber"},next:{title:"CtaButton",permalink:"/va-mobile-app/docs/UX/ComponentsSection/Buttons and Links/CtaButton"}},m=[],p="<CrisisLineCta onPress={onCrisisLine} />",u={toc:m,exampleString:p},d="wrapper";function C(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(s.Z,{componentName:"CrisisLineCta",example:p,codeString:i,mdxType:"ComponentTopInfo"}))}C.isMDXComponent=!0}}]);