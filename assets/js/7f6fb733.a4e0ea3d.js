"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4409],{38909:function(e,n,t){t.d(n,{Z:function(){return u}});var r=t(67294),o=t(19055),a=t(26396),l=t(58215),s=t(82224),c=t(36005),i=function(e){var n=e.props;return n?r.createElement(r.Fragment,null,c.ZP.isEmpty(n)?r.createElement("pre",{className:"preText"},"This component does not have props defined"):r.createElement("table",null,r.createElement("thead",null,r.createElement("tr",null,r.createElement("th",null,"Name"),r.createElement("th",null,"Type"),r.createElement("th",null,"Default Value"),r.createElement("th",null,"Required"),r.createElement("th",null,"Description"))),r.createElement("tbody",null,Object.keys(n).map((function(e){var t;return r.createElement("tr",{key:e},r.createElement("td",null,r.createElement("code",null,e)),r.createElement("td",{style:{minWidth:200}},null==(t=n[e].type)?void 0:t.name),r.createElement("td",null,n[e].defaultValue&&n[e].defaultValue.value.toString()),r.createElement("td",null,n[e].required?"Yes":"No"),r.createElement("td",null,n[e].description))}))))):null};function u(e){var n=(0,s.N)(e.componentName)[0],t=n.description,c=n.displayName,u=n.props,m="How to use the "+c+" component",p="Full code for the "+c+" component";return r.createElement(r.Fragment,null,t,r.createElement("br",null),r.createElement("br",null),r.createElement(a.Z,null,r.createElement(l.Z,{value:"props",label:"Properties"},r.createElement(i,{props:u})),r.createElement(l.Z,{value:"example",label:"Example"},e.example&&r.createElement(o.Z,{title:m,className:"language-tsx test"},e.example)),r.createElement(l.Z,{value:"code",label:"Source Code"},e.codeString&&r.createElement(o.Z,{title:p,className:"language-tsx"},e.codeString)),r.createElement(l.Z,{value:"accessibility",label:"Accessibility"},r.createElement("pre",{className:"preText"},e.accessibilityInfo))))}},54864:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return i},default:function(){return C},exampleString:function(){return p},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return m}});var r=t(87462),o=t(63366),a=(t(67294),t(3905)),l=(t(19055),t(38909)),s=["components"],c={},i=void 0,u={unversionedId:"Engineering/FrontEnd/ComponentsSection/Carousel/Carousel",id:"Engineering/FrontEnd/ComponentsSection/Carousel/Carousel",title:"Carousel",description:"",source:"@site/docs/Engineering/FrontEnd/ComponentsSection/Carousel/Carousel.mdx",sourceDirName:"Engineering/FrontEnd/ComponentsSection/Carousel",slug:"/Engineering/FrontEnd/ComponentsSection/Carousel/",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/ComponentsSection/Carousel/",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"MultiTouchCard",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/ComponentsSection/Cards/MultiTouchCard"},next:{title:"CarouselTabBar",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/ComponentsSection/Carousel/CarouselTabBar"}},m=[],p="<Carousel screenList={screenList} onCarouselEnd={onCarouselEnd} translation={t} />",d={toc:m,exampleString:p};function C(e){var n=e.components,t=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)(l.Z,{componentName:"Carousel",example:p,codeString:"import React, { FC, ReactElement } from 'react'\n\nimport { CardStyleInterpolators, createStackNavigator } from '@react-navigation/stack'\nimport { TFunction } from 'i18next'\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\nimport _ from 'underscore'\n\nimport CarouselTabBar from './CarouselTabBar'\n\nconst CarouselTabNav = createBottomTabNavigator()\nconst CarouselStack = createStackNavigator()\n\nexport type CarouselScreen = {\n  /** name of component */\n  name: string\n\n  /** component to display in carousel */\n  component: FC<Record<string, unknown>>\n\n  /** optional accessibility hints for the skip button, continue button, and carousel indicators progress bar */\n  a11yHints?: {\n    skipHint?: string\n    carouselIndicatorsHint?: string\n    continueHint?: string\n    doneHint?: string\n    backHint?: string\n  }\n}\n\ntype CarouselStackComponentProps = {\n  /** list of screens with the screen name and the component in each item */\n  screenList: Array<CarouselScreen>\n}\n\nconst CarouselStackComponent: FC<CarouselStackComponentProps> = ({ screenList }) => {\n  return (\n    <CarouselStack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyleInterpolator: CardStyleInterpolators.forHorizontalIOS,\n        detachPreviousScreen: false,\n      }}>\n      {_.map(screenList, (screen, index) => {\n        return <CarouselStack.Screen name={screen.name as never} component={screen.component} key={index} />\n      })}\n    </CarouselStack.Navigator>\n  )\n}\n\ntype CarouselProps = {\n  /** list of screens with the screen name and the component in each item */\n  screenList: Array<CarouselScreen>\n\n  /** called when the skip button is clicked or the user has gone through all the carousel components */\n  onCarouselEnd: () => void\n\n  /** useTranslations t function to translate the labels */\n  translation: TFunction\n}\n\n/**A common component to set up a carousel of screens and display a carousel tab at the bottom of the screen, which displays a skip button, continue button, and a progress bar*/\nconst Carousel: FC<CarouselProps> = ({ screenList, onCarouselEnd, translation }) => {\n  return (\n    <CarouselTabNav.Navigator tabBar={(props): React.ReactNode => <CarouselTabBar {...props} onCarouselEnd={onCarouselEnd} translation={translation} screenList={screenList} />}>\n      <CarouselTabNav.Screen name=\"Main\" children={(): ReactElement => <CarouselStackComponent screenList={screenList} />} options={{ headerShown: false }} />\n    </CarouselTabNav.Navigator>\n  )\n}\n\nexport default Carousel\n",mdxType:"ComponentTopInfo"}))}C.isMDXComponent=!0}}]);