"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2260],{69737:function(n,t,o){o.r(t),o.d(t,{contentTitle:function(){return p},default:function(){return d},exampleString:function(){return u},frontMatter:function(){return a},metadata:function(){return l},toc:function(){return m}});var e=o(87462),i=o(63366),r=(o(67294),o(3905)),s=(o(19055),o(38909)),c=["components"],a={},p=void 0,l={unversionedId:"Engineering/FrontEnd/ComponentsSection/Switch",id:"Engineering/FrontEnd/ComponentsSection/Switch",isDocsHomePage:!1,title:"Switch",description:"",source:"@site/docs/Engineering/FrontEnd/ComponentsSection/Switch.mdx",sourceDirName:"Engineering/FrontEnd/ComponentsSection",slug:"/Engineering/FrontEnd/ComponentsSection/Switch",permalink:"/docs/Engineering/FrontEnd/ComponentsSection/Switch",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"SimpleList",permalink:"/docs/Engineering/FrontEnd/ComponentsSection/SimpleList"},next:{title:"TextArea",permalink:"/docs/Engineering/FrontEnd/ComponentsSection/TextArea"}},m=[],u="<Switch onPress={() => { console.log('update on press') }} on={false} />",h={toc:m,exampleString:u};function d(n){var t=n.components,o=(0,i.Z)(n,c);return(0,r.kt)("wrapper",(0,e.Z)({},h,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(s.Z,{componentName:"Switch",example:u,codeString:"import { AccessibilityProps, Switch as RNSwitch } from 'react-native'\nimport React, { FC } from 'react'\n\nimport { a11yHintProp } from 'utils/accessibility'\nimport { useTheme } from 'utils/hooks'\nimport styled from 'styled-components'\n\nconst StyledRNSwitch = styled(RNSwitch)`\n  shadow-opacity: 0.3;\n  shadow-radius: 1px;\n  shadow-offset: 0px 0.5px;\n  min-width: 51px;\n`\n/**\n * Signifies props passed into {@link Switch}\n */\nexport type SwitchProps = AccessibilityProps & {\n  /** callback called on value change of the switch */\n  onPress: (value: boolean) => void\n  /** optional value of switch, updated with onPress */\n  on?: boolean\n  /** optional testID of switch */\n  testID?: string\n  /** optional accessibilityHint */\n  a11yHint?: string\n}\n\n/**A common component for the react native switch component*/\nconst Switch: FC<SwitchProps> = (props) => {\n  const { onPress, on, testID, a11yHint } = props\n  const theme = useTheme()\n  return (\n    <StyledRNSwitch\n      trackColor={{ false: theme.colors.control.switchOffTrack, true: theme.colors.control.switchOnTrack }}\n      thumbColor={theme.colors.control.switchOnThumb}\n      onValueChange={onPress}\n      value={!!on}\n      testID={testID}\n      {...a11yHintProp(a11yHint || '')}\n    />\n  )\n}\n\nexport default Switch\n",mdxType:"ComponentTopInfo"}))}d.isMDXComponent=!0}}]);