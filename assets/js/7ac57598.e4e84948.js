"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[9568],{76840:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>r,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var i=t(87462),o=(t(67294),t(3905));t(95657);const a={},r="Endpoint Creation Checklist",l={unversionedId:"Engineering/BackEnd/Architecture/Endpoint Creation Checklist",id:"Engineering/BackEnd/Architecture/Endpoint Creation Checklist",title:"Endpoint Creation Checklist",description:"Checklist for creating new endpoints:",source:"@site/docs/Engineering/BackEnd/Architecture/Endpoint Creation Checklist.md",sourceDirName:"Engineering/BackEnd/Architecture",slug:"/Engineering/BackEnd/Architecture/Endpoint Creation Checklist",permalink:"/va-mobile-app/docs/Engineering/BackEnd/Architecture/Endpoint Creation Checklist",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Directory Layout",permalink:"/va-mobile-app/docs/Engineering/BackEnd/Architecture/DirectoryLayout"},next:{title:"Feature Flagging",permalink:"/va-mobile-app/docs/Engineering/BackEnd/Architecture/FeatureFlagging"}},p=[{value:"Checklist for creating new endpoints:",id:"checklist-for-creating-new-endpoints",children:[{value:"App Functionality",id:"app-functionality",children:[],level:3},{value:"Specs",id:"specs",children:[],level:3},{value:"Documentation",id:"documentation",children:[],level:3},{value:"Monitoring",id:"monitoring",children:[],level:3}],level:2}],s={toc:p},m="wrapper";function c(e){let{components:n,...t}=e;return(0,o.kt)(m,(0,i.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"endpoint-creation-checklist"},"Endpoint Creation Checklist"),(0,o.kt)("h2",{id:"checklist-for-creating-new-endpoints"},"Checklist for creating new endpoints:"),(0,o.kt)("h3",{id:"app-functionality"},"App Functionality"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Added endpoint to routes.rb (",(0,o.kt)("inlineCode",{parentName:"li"},"modules/mobile/config/routes.rb"),")"),(0,o.kt)("li",{parentName:"ul"},"Created new controller method for endpoint (",(0,o.kt)("inlineCode",{parentName:"li"},"modules/mobile/app/controllers"),")"),(0,o.kt)("li",{parentName:"ul"},"Created new serializer (",(0,o.kt)("inlineCode",{parentName:"li"},"modules/mobile/app/serializers/mobile"),") ",(0,o.kt)("em",{parentName:"li"},"(if applicable)")),(0,o.kt)("li",{parentName:"ul"},"Created new model (",(0,o.kt)("inlineCode",{parentName:"li"},"modules/mobile/app/models"),") ",(0,o.kt)("em",{parentName:"li"},"(if applicable)")),(0,o.kt)("li",{parentName:"ul"},"Created new pagination contract (",(0,o.kt)("inlineCode",{parentName:"li"},"modules/mobile/app/models/mobile/v0/contracts"),") ",(0,o.kt)("em",{parentName:"li"},"(if applicable)"))),(0,o.kt)("h3",{id:"specs"},"Specs"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Wrote request specs for new endpoint in rspec (",(0,o.kt)("inlineCode",{parentName:"li"},"modules/mobile/spec/request"),")"),(0,o.kt)("li",{parentName:"ul"},"Created JSON schema for endpoint (",(0,o.kt)("inlineCode",{parentName:"li"},"modules/mobile/spec/support/schemas"),") ",(0,o.kt)("em",{parentName:"li"},"(if applicable)"))),(0,o.kt)("h3",{id:"documentation"},"Documentation"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Created $ref schema for new endpoint (",(0,o.kt)("inlineCode",{parentName:"li"},"modules/mobile/docs/schemas"),")"),(0,o.kt)("li",{parentName:"ul"},"Updated openapi.yaml for new endpoint (",(0,o.kt)("inlineCode",{parentName:"li"},"modules/mobile/docs/openapi.yaml"),")",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Included standard error responses in docs ",(0,o.kt)("em",{parentName:"li"},"(more responses may be applicable for some endpoints)"),":")),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"'401':\n    $ref: '#/components/responses/401'\n'403':\n    $ref: '#/components/responses/403'\n'404':\n    $ref: '#/components/responses/404'\n'408':\n    $ref: '#/components/responses/408'\n'500':\n    $ref: '#/components/responses/500'\n'502':\n    $ref: '#/components/responses/502'\n'503':\n    $ref: '#/components/responses/503'\n'504':\n    $ref: '#/components/responses/504'\n"))),(0,o.kt)("li",{parentName:"ul"},"Regenerated HTML file by running ",(0,o.kt)("inlineCode",{parentName:"li"},"generate_static_docs.sh")," command (",(0,o.kt)("inlineCode",{parentName:"li"},"modules/mobile/docs/generate_static_docs.sh"),")")),(0,o.kt)("h3",{id:"monitoring"},"Monitoring"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Added new endpoint to ",(0,o.kt)("inlineCode",{parentName:"li"},"SERVICE_GRAPH")," (",(0,o.kt)("inlineCode",{parentName:"li"},"modules/mobile/app/controllers/mobile/v0/maintenance_windows_controller.rb"),") ",(0,o.kt)("em",{parentName:"li"},"(only applicable for new upstream services used)"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Updated request specs (",(0,o.kt)("inlineCode",{parentName:"li"},"modules/mobile/spec/models/service_graph_spec.rb"),")"))),(0,o.kt)("li",{parentName:"ul"},"Added new endpoint component to ",(0,o.kt)("inlineCode",{parentName:"li"},"api_mobile_components")," in ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/department-of-veterans-affairs/devops"},"devops repo")," (",(0,o.kt)("inlineCode",{parentName:"li"},"ansible/deployment/config/revproxy-vagov/vars/nginx_components.yml"),") ",(0,o.kt)("em",{parentName:"li"},"(only applicable if new endpoint not already covered by any existing components)"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Ordered the components accordingly to avoid incorrect matches ",(0,o.kt)("em",{parentName:"li"},"(Components are used to match the routes of incoming requests. When a new request is received by the vets-api, datadog will attempt to associate it with the first component in the list that matches- e.g. if a new request comes in for ",(0,o.kt)("inlineCode",{parentName:"em"},"/mobile/v0/appointments")," and ",(0,o.kt)("inlineCode",{parentName:"em"},"appointment")," is listed above ",(0,o.kt)("inlineCode",{parentName:"em"},"appointments")," in the components list, it will associate the request with the ",(0,o.kt)("inlineCode",{parentName:"em"},"appointment")," component.)")),(0,o.kt)("li",{parentName:"ul"},"Added mapping of component section to ",(0,o.kt)("inlineCode",{parentName:"li"},"nginx_api_server.conf.j2")," (",(0,o.kt)("inlineCode",{parentName:"li"},"ansible/deployment/config/revproxy-vagov/templates/nginx_api_server.conf.j2"),") ",(0,o.kt)("em",{parentName:"li"},"(if new component section added in ",(0,o.kt)("inlineCode",{parentName:"em"},"nginx_components.yml"),")")),(0,o.kt)("li",{parentName:"ul"},"Added mapping of component section to ",(0,o.kt)("inlineCode",{parentName:"li"},"nginx_new_api_server.conf.j2")," (",(0,o.kt)("inlineCode",{parentName:"li"},"ansible/deployment/config/revproxy-vagov/templates/nginx_new_api_server.conf.j2"),") ",(0,o.kt)("em",{parentName:"li"},"(if new component section added in ",(0,o.kt)("inlineCode",{parentName:"em"},"nginx_components.yml"),")"))))))}c.isMDXComponent=!0}}]);