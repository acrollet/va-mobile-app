"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6771],{38909:function(e,n,t){t.d(n,{Z:function(){return m}});var o=t(67294),r=t(19055),a=t(26396),l=t(58215),i=t(82224),s=t(36005),c=function(e){var n=e.props;return n?o.createElement(o.Fragment,null,s.ZP.isEmpty(n)?o.createElement("pre",{className:"preText"},"This component does not have props defined"):o.createElement("table",null,o.createElement("thead",null,o.createElement("tr",null,o.createElement("th",null,"Name"),o.createElement("th",null,"Type"),o.createElement("th",null,"Default Value"),o.createElement("th",null,"Required"),o.createElement("th",null,"Description"))),o.createElement("tbody",null,Object.keys(n).map((function(e){var t;return o.createElement("tr",{key:e},o.createElement("td",null,o.createElement("code",null,e)),o.createElement("td",{style:{minWidth:200}},null==(t=n[e].type)?void 0:t.name),o.createElement("td",null,n[e].defaultValue&&n[e].defaultValue.value.toString()),o.createElement("td",null,n[e].required?"Yes":"No"),o.createElement("td",null,n[e].description))}))))):null};function m(e){var n=(0,i.N)(e.componentName)[0],t=n.description,s=n.displayName,m=n.props,p="How to use the "+s+" component",u="Full code for the "+s+" component";return o.createElement(o.Fragment,null,t,o.createElement("br",null),o.createElement("br",null),o.createElement(a.Z,null,o.createElement(l.Z,{value:"props",label:"Properties"},o.createElement(c,{props:m})),o.createElement(l.Z,{value:"example",label:"Example"},e.example&&o.createElement(r.Z,{title:p,className:"language-tsx test"},e.example)),o.createElement(l.Z,{value:"code",label:"Source Code"},e.codeString&&o.createElement(r.Z,{title:u,className:"language-tsx"},e.codeString)),o.createElement(l.Z,{value:"accessibility",label:"Accessibility"},o.createElement("pre",{className:"preText"},e.accessibilityInfo))))}},75823:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return c},default:function(){return x},exampleString:function(){return u},frontMatter:function(){return s},metadata:function(){return m},toc:function(){return p}});var o=t(87462),r=t(63366),a=(t(67294),t(3905)),l=(t(19055),t(38909)),i=["components"],s={},c=void 0,m={unversionedId:"Engineering/FrontEnd/ComponentsSection/Text Views/TextArea",id:"Engineering/FrontEnd/ComponentsSection/Text Views/TextArea",title:"TextArea",description:"export const exampleString = `",source:"@site/docs/Engineering/FrontEnd/ComponentsSection/Text Views/TextArea.mdx",sourceDirName:"Engineering/FrontEnd/ComponentsSection/Text Views",slug:"/Engineering/FrontEnd/ComponentsSection/Text Views/TextArea",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/ComponentsSection/Text Views/TextArea",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"MessagesCountTag",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/ComponentsSection/Tags/MessagesCountTag"},next:{title:"TextLineWithIcon",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/ComponentsSection/Text Views/TextLineWithIcon"}},p=[],u="<TextArea>\n    <VAButton \n    onPress={resetInAppReview} \n    label={'Reset In-App Review Actions'} \n    buttonType={ButtonTypesConstants.buttonPrimary} />\n</TextArea>",d={toc:p,exampleString:u};function x(e){var n=e.components,t=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)(l.Z,{componentName:"TextArea",example:u,codeString:"import { TouchableWithoutFeedback } from 'react-native'\nimport { useTheme } from 'utils/hooks'\nimport React, { FC } from 'react'\n\nimport Box, { BoxProps } from './Box'\n\n/**\n *  Signifies the props that need to be passed in to {@link TextArea}\n */\nexport type TextAreaProps = {\n  /** onPress callback */\n  onPress?: () => void\n  /** prop to remove border */\n  noBorder?: boolean\n}\n\n/**\n * Text area block for content\n *\n * @returns TextView component\n */\nconst TextArea: FC<TextAreaProps> = ({ onPress, noBorder, children }) => {\n  const theme = useTheme()\n\n  const borderProps: BoxProps = noBorder\n    ? {}\n    : {\n        borderStyle: 'solid',\n        borderBottomWidth: 'default',\n        borderBottomColor: 'primary',\n        borderTopWidth: 'default',\n        borderTopColor: 'primary',\n      }\n\n  const boxProps: BoxProps = {\n    backgroundColor: 'contentBox',\n    p: theme.dimensions.cardPadding,\n  }\n\n  const _onPress = (): void => {\n    if (onPress) {\n      onPress()\n    }\n  }\n\n  if (onPress) {\n    return (\n      <TouchableWithoutFeedback onPress={_onPress}>\n        <Box {...boxProps}>{children}</Box>\n      </TouchableWithoutFeedback>\n    )\n  }\n\n  return (\n    <Box {...boxProps} {...borderProps}>\n      {children}\n    </Box>\n  )\n}\n\nexport default TextArea\n",mdxType:"ComponentTopInfo"}))}x.isMDXComponent=!0}}]);