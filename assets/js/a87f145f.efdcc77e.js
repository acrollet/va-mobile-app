"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5898],{32666:(e,t,n)=>{n.d(t,{Z:()=>d});var l=n(67294),r=n(97405),o=n(22808),i=n(30433),s=n(41284),a=n(36005);const c=e=>{let{props:t}=e;return t?l.createElement(l.Fragment,null,a.ZP.isEmpty(t)?l.createElement("pre",{className:"preText"},"This component does not have props defined"):l.createElement("table",null,l.createElement("thead",null,l.createElement("tr",null,l.createElement("th",null,"Name"),l.createElement("th",null,"Type"),l.createElement("th",null,"Default Value"),l.createElement("th",null,"Required"),l.createElement("th",null,"Description"))),l.createElement("tbody",null,Object.keys(t).map((e=>l.createElement("tr",{key:e},l.createElement("td",null,l.createElement("code",null,e)),l.createElement("td",{style:{minWidth:200}},t[e].type?.name),l.createElement("td",null,t[e].defaultValue&&t[e].defaultValue.value.toString()),l.createElement("td",null,t[e].required?"Yes":"No"),l.createElement("td",null,t[e].description))))))):null};function d(e){const t=(0,s.N)(e.componentName),{description:n,displayName:a,props:d}=t[0],p=`How to use the ${a} component`,u=`Full code for the ${a} component`;return l.createElement(l.Fragment,null,n,l.createElement("br",null),l.createElement("br",null),l.createElement(o.Z,null,l.createElement(i.Z,{value:"props",label:"Properties"},l.createElement(c,{props:d})),l.createElement(i.Z,{value:"example",label:"Example"},e.example&&l.createElement(r.Z,{title:p,className:"language-tsx test"},e.example)),l.createElement(i.Z,{value:"code",label:"Source Code"},e.codeString&&l.createElement(r.Z,{title:u,className:"language-tsx"},e.codeString)),l.createElement(i.Z,{value:"accessibility",label:"Accessibility"},l.createElement("pre",{className:"preText"},e.accessibilityInfo))))}},41284:(e,t,n)=>{n.d(t,{N:()=>r});var l=n(52426);const r=e=>(0,l.ZP)()["docusaurus-plugin-react-docgen-typescript"].default.filter((t=>t.displayName===e))},38519:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>g,exampleString:()=>u,frontMatter:()=>s,metadata:()=>c,toc:()=>p});var l=n(87462),r=(n(67294),n(3905)),o=(n(8209),n(97405),n(2809)),i=n(32666);n.p;const s={},a=void 0,c={unversionedId:"Flagship design library/Components/Alerts and Progress/AlertBox",id:"Flagship design library/Components/Alerts and Progress/AlertBox",title:"AlertBox",description:"One or two sentences describing the purpose of this component.",source:"@site/docs/Flagship design library/Components/Alerts and Progress/AlertBox.mdx",sourceDirName:"Flagship design library/Components/Alerts and Progress",slug:"/Flagship design library/Components/Alerts and Progress/AlertBox",permalink:"/va-mobile-app/docs/Flagship design library/Components/Alerts and Progress/AlertBox",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"AccordionCollapsible",permalink:"/va-mobile-app/docs/Flagship design library/Components/Alerts and Progress/AccordionCollapsible"},next:{title:"LoadingComponent",permalink:"/va-mobile-app/docs/Flagship design library/Components/Alerts and Progress/LoadingComponent"}},d={},p=[{value:"Usage",id:"usage",level:3},{value:"Example in practice",id:"example-in-practice",level:3},{value:"Best practices",id:"best-practices",level:3},{value:"Content guidelines",id:"content-guidelines",level:3},{value:"A11y",id:"a11y",level:3},{value:"Related components",id:"related-components",level:3},{value:"Engineering resources",id:"engineering-resources",level:2}],u='<AlertBox \n  title="Alert header text here" \n  text="Alert body text here"\n  textA11yLabel="Alert text a11y label here"\n  border="warning"\n/>',m={toc:p,exampleString:u},b="wrapper";function g(e){let{components:t,...s}=e;return(0,r.kt)(b,(0,l.Z)({},m,s,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"One or two sentences describing the purpose of this component."),(0,r.kt)("iframe",{width:"800",height:"450",alt:"alt text goes here",src:"https://www.figma.com/embed?embed_host=share&url=https%3A%2F%2Fwww.figma.com%2Ffile%2FQVLPB3eOunmKrgQOuOt0SU%2FVAMobile-DesignLibrary1.0-%25F0%259F%2593%2590%3Fnode-id%3D638%253A1966%26t%3Diqk24DBhrvJTq9ln-1",allowfullscreen:!0}),(0,r.kt)("h3",{id:"usage"},"Usage"),(0,r.kt)("p",null,"[body text]"),(0,r.kt)("h3",{id:"example-in-practice"},"Example in practice"),(0,r.kt)("p",null,"[Example screenshot goes here - use public embed code in Figma Share modal if possible]"),(0,r.kt)("p",null,"[body text]"),(0,r.kt)("h3",{id:"best-practices"},"Best practices"),(0,r.kt)("p",null,"[body text]"),(0,r.kt)("h3",{id:"content-guidelines"},"Content guidelines"),(0,r.kt)("p",null,"[body text]"),(0,r.kt)("h3",{id:"a11y"},"A11y"),(0,r.kt)("p",null,"[body text]"),(0,r.kt)("h3",{id:"related-components"},"Related components"),(0,r.kt)("p",null,"[body text]"),(0,r.kt)("h2",{id:"engineering-resources"},"Engineering resources"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Docusaurus",src:n(77309).Z,width:"373",height:"198"})),(0,r.kt)(i.Z,{componentName:"AlertBox",example:u,codeString:o.Z,mdxType:"ComponentTopInfo"}))}g.isMDXComponent=!0},2809:(e,t,n)=>{n.d(t,{Z:()=>l});const l="import { AccessibilityRole, ScrollView, View } from 'react-native'\nimport React, { FC, RefObject, useEffect, useState } from 'react'\n\nimport { Box, BoxProps, TextView } from './index'\nimport { VABorderColors } from 'styles/theme'\nimport { triggerHaptic } from 'utils/haptics'\nimport { useAutoScrollToElement, useTheme } from 'utils/hooks'\n\nexport type AlertBoxProps = {\n  /** color of the border */\n  border: keyof VABorderColors\n  /** Optional boolean for determining when to focus on error alert boxes (e.g. onSaveClicked). */\n  focusOnError?: boolean\n  /** Optional ref for the parent scroll view. Used for scrolling to error alert boxes. */\n  scrollViewRef?: RefObject<ScrollView>\n  /** body of the alert */\n  text?: string\n  /** optional bolded title text */\n  title?: string\n  /** optional accessibility label for the text */\n  textA11yLabel?: string\n  /** optional accessibility label for the title */\n  titleA11yLabel?: string\n  /** optional accessibility role for the title */\n  titleRole?: AccessibilityRole\n}\n\n/**\n * Displays content in a box styled as an alert\n */\nconst AlertBox: FC<AlertBoxProps> = ({ border, children, focusOnError = true, scrollViewRef, title, text, textA11yLabel, titleA11yLabel, titleRole }) => {\n  const theme = useTheme()\n  const [scrollRef, viewRef, scrollToAlert] = useAutoScrollToElement()\n  const [shouldFocus, setShouldFocus] = useState(true)\n\n  const boxPadding = 20\n\n  useEffect(() => {\n    if (border === 'error' && scrollViewRef?.current && (title || text)) {\n      scrollRef.current = scrollViewRef.current\n      scrollToAlert(-boxPadding)\n    }\n    setShouldFocus(focusOnError)\n  }, [border, focusOnError, scrollRef, scrollToAlert, scrollViewRef, text, title])\n\n  const boxProps: BoxProps = {\n    backgroundColor: 'alertBox',\n    borderLeftWidth: theme.dimensions.alertBorderWidth,\n    borderLeftColor: border,\n    py: boxPadding,\n    px: boxPadding,\n  }\n\n  const vibrate = (): void => {\n    if (border === 'error') {\n      triggerHaptic('notificationError')\n    } else if (border === 'warning') {\n      triggerHaptic('notificationWarning')\n    }\n  }\n\n  const titleAccessibilityRole = titleRole ? titleRole : text || children ? 'header' : undefined\n\n  return (\n    <Box {...boxProps}>\n      {!!title && (\n        <View ref={viewRef} accessible={true} accessibilityLabel={titleA11yLabel || title} accessibilityRole={titleAccessibilityRole}>\n          <TextView variant=\"MobileBodyBold\" mb={text ? theme.dimensions.standardMarginBetween : 0}>\n            {title}\n          </TextView>\n        </View>\n      )}\n      {!!text && (\n        <View ref={!title ? viewRef : undefined} accessible={true} accessibilityLabel={textA11yLabel || text}>\n          <TextView variant=\"MobileBody\">{text}</TextView>\n        </View>\n      )}\n      {children}\n      {shouldFocus && vibrate()}\n    </Box>\n  )\n}\n\nexport default AlertBox\n"},77309:(e,t,n)=>{n.d(t,{Z:()=>l});const l=n.p+"assets/images/AlertBox-dfbe989b5e715813bc8ceae5501d4bc5.png"}}]);