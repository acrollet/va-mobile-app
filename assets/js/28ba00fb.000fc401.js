"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5562],{38909:function(e,t,n){n.d(t,{Z:function(){return u}});var o=n(67294),r=n(19055),s=n(26396),a=n(58215),i=n(82224),l=n(36005),c=function(e){var t=e.props;return t?o.createElement(o.Fragment,null,l.ZP.isEmpty(t)?o.createElement("pre",{className:"preText"},"This component does not have props defined"):o.createElement("table",null,o.createElement("thead",null,o.createElement("tr",null,o.createElement("th",null,"Name"),o.createElement("th",null,"Type"),o.createElement("th",null,"Default Value"),o.createElement("th",null,"Required"),o.createElement("th",null,"Description"))),o.createElement("tbody",null,Object.keys(t).map((function(e){var n;return o.createElement("tr",{key:e},o.createElement("td",null,o.createElement("code",null,e)),o.createElement("td",{style:{minWidth:200}},null==(n=t[e].type)?void 0:n.name),o.createElement("td",null,t[e].defaultValue&&t[e].defaultValue.value.toString()),o.createElement("td",null,t[e].required?"Yes":"No"),o.createElement("td",null,t[e].description))}))))):null};function u(e){var t=(0,i.N)(e.componentName)[0],n=t.description,l=t.displayName,u=t.props,m="How to use the "+l+" component",d="Full code for the "+l+" component";return o.createElement(o.Fragment,null,n,o.createElement("br",null),o.createElement("br",null),o.createElement(s.Z,null,o.createElement(a.Z,{value:"props",label:"Properties"},o.createElement(c,{props:u})),o.createElement(a.Z,{value:"example",label:"Example"},e.example&&o.createElement(r.Z,{title:m,className:"language-tsx test"},e.example)),o.createElement(a.Z,{value:"code",label:"Source Code"},e.codeString&&o.createElement(r.Z,{title:d,className:"language-tsx"},e.codeString)),o.createElement(a.Z,{value:"accessibility",label:"Accessibility"},o.createElement("pre",{className:"preText"},e.accessibilityInfo))))}},82224:function(e,t,n){n.d(t,{N:function(){return r}});var o=n(28084),r=function(e){return(0,o.default)()["docusaurus-plugin-react-docgen-typescript"].default.filter((function(t){return t.displayName===e}))}},89361:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return c},default:function(){return f},exampleString:function(){return d},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return m}});var o=n(87462),r=n(63366),s=(n(67294),n(3905)),a=(n(19055),n(38909)),i=["components"],l={},c=void 0,u={unversionedId:"Engineering/FrontEnd/ComponentsSection/Buttons and Links/FooterButton",id:"Engineering/FrontEnd/ComponentsSection/Buttons and Links/FooterButton",title:"FooterButton",description:"export const exampleString = `<FooterButton",source:"@site/docs/Engineering/FrontEnd/ComponentsSection/Buttons and Links/FooterButton.mdx",sourceDirName:"Engineering/FrontEnd/ComponentsSection/Buttons and Links",slug:"/Engineering/FrontEnd/ComponentsSection/Buttons and Links/FooterButton",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/ComponentsSection/Buttons and Links/FooterButton",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"CtaButton",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/ComponentsSection/Buttons and Links/CtaButton"},next:{title:"LargeNavButton",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/ComponentsSection/Buttons and Links/LargeNavButton"}},m=[],d="<FooterButton \ntext='test' \niconProps={{ name: 'Compose' }} \nbackgroundColor='main' \ntestID='test-id' />",p={toc:m,exampleString:d};function f(e){var t=e.components,n=(0,r.Z)(e,i);return(0,s.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)(a.Z,{componentName:"FooterButton",example:d,codeString:"import React, { FC, useState } from 'react'\n\nimport { Pressable, PressableProps } from 'react-native'\nimport { SafeAreaView } from 'react-native-safe-area-context'\nimport { VAButtonTextColors, VATextColors } from '../styles/theme'\nimport { a11yHintProp, testIdProps } from 'utils/accessibility'\nimport { themeFn } from 'utils/theme'\nimport { useTheme } from 'utils/hooks'\nimport Box, { BackgroundVariant, BoxProps } from './Box'\nimport TextView from './TextView'\nimport VAIcon, { VAIconProps } from './VAIcon'\nimport styled from 'styled-components'\n\nexport type FooterButtonProps = {\n  /** text that will display on the button */\n  text: string\n  /** text color */\n  textColor?: keyof VATextColors | keyof VAButtonTextColors\n  /** props for icon */\n  iconProps?: VAIconProps\n  /** function called when pressed */\n  onPress?: () => void\n  /** background color */\n  backGroundColor?: BackgroundVariant\n  /** test id */\n  testID?: string\n  /** optional accessibility hint */\n  a11yHint?: string\n}\n\nconst StyledSafeAreaView = styled(SafeAreaView)`\n  background-color: ${themeFn((theme) => theme.colors.background.navButton)};\n`\n/**A common component to show a button at the bottom of the screen that takes the full width of the display. Optional Icon can be passed in to render next to text */\nconst FooterButton: FC<FooterButtonProps> = ({ text, iconProps, onPress, textColor, backGroundColor, testID, a11yHint }) => {\n  const theme = useTheme()\n\n  const [isPressed, setIsPressed] = useState(false)\n\n  const getTextColor = (): keyof VATextColors | keyof VAButtonTextColors => {\n    if (textColor) {\n      return textColor\n    }\n\n    return isPressed ? 'footerButtonActive' : 'footerButton'\n  }\n\n  const pressableProps: PressableProps = {\n    onPress,\n    onPressIn: (): void => setIsPressed(true),\n    onPressOut: (): void => setIsPressed(false),\n    accessibilityRole: 'button',\n    accessible: true,\n  }\n\n  const boxProps: BoxProps = {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    backgroundColor: backGroundColor ? backGroundColor : isPressed ? 'footerButtonActive' : 'navButton',\n    borderTopColor: 'footerButton',\n    borderTopWidth: 'default',\n    minHeight: theme.dimensions.navBarHeight,\n    py: theme.dimensions.buttonPadding,\n    px: theme.dimensions.cardPadding,\n  }\n\n  return (\n    <StyledSafeAreaView edges={['bottom']}>\n      <Pressable {...pressableProps} {...testIdProps(testID || text)} {...a11yHintProp(a11yHint || '')}>\n        <Box {...boxProps}>\n          {iconProps && (\n            <Box mr={theme.dimensions.condensedMarginBetween}>\n              <VAIcon fill={isPressed ? 'footerButtonActive' : 'footerButton'} width={22} height={22} preventScaling={true} {...iconProps} />\n            </Box>\n          )}\n          <TextView variant=\"MobileBodyBold\" allowFontScaling={false} color={getTextColor()} mr={theme.dimensions.textIconMargin}>\n            {text}\n          </TextView>\n        </Box>\n      </Pressable>\n    </StyledSafeAreaView>\n  )\n}\n\nexport default FooterButton\n",mdxType:"ComponentTopInfo"}))}f.isMDXComponent=!0}}]);