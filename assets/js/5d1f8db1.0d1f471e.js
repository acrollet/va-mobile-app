"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6927],{38909:function(e,t,n){n.d(t,{Z:function(){return c}});var r=n(67294),a=n(19055),o=n(26396),s=n(58215),l=n(82224),i=n(36005),m=function(e){var t=e.props;return t?r.createElement(r.Fragment,null,i.ZP.isEmpty(t)?r.createElement("pre",{className:"preText"},"This component does not have props defined"):r.createElement("table",null,r.createElement("thead",null,r.createElement("tr",null,r.createElement("th",null,"Name"),r.createElement("th",null,"Type"),r.createElement("th",null,"Default Value"),r.createElement("th",null,"Required"),r.createElement("th",null,"Description"))),r.createElement("tbody",null,Object.keys(t).map((function(e){var n;return r.createElement("tr",{key:e},r.createElement("td",null,r.createElement("code",null,e)),r.createElement("td",{style:{minWidth:200}},null==(n=t[e].type)?void 0:n.name),r.createElement("td",null,t[e].defaultValue&&t[e].defaultValue.value.toString()),r.createElement("td",null,t[e].required?"Yes":"No"),r.createElement("td",null,t[e].description))}))))):null};function c(e){var t=(0,l.N)(e.componentName)[0],n=t.description,i=t.displayName,c=t.props,u="How to use the "+i+" component",p="Full code for the "+i+" component";return r.createElement(r.Fragment,null,n,r.createElement("br",null),r.createElement("br",null),r.createElement(o.Z,null,r.createElement(s.Z,{value:"props",label:"Properties"},r.createElement(m,{props:c})),r.createElement(s.Z,{value:"example",label:"Example"},e.example&&r.createElement(a.Z,{title:u,className:"language-tsx test"},e.example)),r.createElement(s.Z,{value:"code",label:"Source Code"},e.codeString&&r.createElement(a.Z,{title:p,className:"language-tsx"},e.codeString)),r.createElement(s.Z,{value:"accessibility",label:"Accessibility"},r.createElement("pre",{className:"preText"},e.accessibilityInfo))))}},82224:function(e,t,n){n.d(t,{N:function(){return a}});var r=n(28084),a=function(e){return(0,r.default)()["docusaurus-plugin-react-docgen-typescript"].default.filter((function(t){return t.displayName===e}))}},33845:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return m},default:function(){return g},exampleString:function(){return p},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return u}});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),s=(n(19055),n(38909)),l=["components"],i={},m=void 0,c={unversionedId:"UX/ComponentsSection/Alerts and Progress/MessageAlert",id:"UX/ComponentsSection/Alerts and Progress/MessageAlert",title:"MessageAlert",description:"export const exampleString = `<MessageAlert",source:"@site/docs/UX/ComponentsSection/Alerts and Progress/MessageAlert.mdx",sourceDirName:"UX/ComponentsSection/Alerts and Progress",slug:"/UX/ComponentsSection/Alerts and Progress/MessageAlert",permalink:"/va-mobile-app/docs/UX/ComponentsSection/Alerts and Progress/MessageAlert",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"LoadingComponent",permalink:"/va-mobile-app/docs/UX/ComponentsSection/Alerts and Progress/LoadingComponent"},next:{title:"AttachmentLink",permalink:"/va-mobile-app/docs/UX/ComponentsSection/Buttons and Links/AttachmentLink"}},u=[],p="<MessageAlert\nhasValidationError={formContainsError}\nsaveDraftAttempted={onSaveDraftClicked}\nsavingDraft={savingDraft}\n/>",d={toc:u,exampleString:p};function g(e){var t=e.components,n=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(s.Z,{componentName:"MessageAlert",example:p,codeString:"import { useTranslation } from 'react-i18next'\nimport React, { FC } from 'react'\n\nimport { AlertBox, Box } from './index'\nimport { LoadingComponent } from 'components'\nimport { NAMESPACE } from 'constants/namespaces'\nimport { useTheme } from 'utils/hooks'\n\nexport type MessageAlertProps = {\n  /**sets if there is validation errors */\n  hasValidationError?: boolean\n  /**sets if attempted to save a draft */\n  saveDraftAttempted?: boolean\n  /**sets that the draft is being saved*/\n  savingDraft?: boolean\n}\n\n/**Common component to show a message alert when saving or sending a secure message */\nconst MessageAlert: FC<MessageAlertProps> = ({ hasValidationError, saveDraftAttempted, savingDraft }) => {\n  const theme = useTheme()\n  const { t } = useTranslation(NAMESPACE.HEALTH)\n\n  let title\n  let text\n  let textA11yLabel\n\n  if (savingDraft) {\n    return <LoadingComponent text={t('secureMessaging.formMessage.saveDraft.loading')} />\n  } else if (hasValidationError) {\n    title = saveDraftAttempted ? t('secureMessaging.formMessage.saveDraft.validation.title') : t('secureMessaging.formMessage.checkYourMessage')\n    text = saveDraftAttempted ? t('secureMessaging.formMessage.saveDraft.validation.text') : undefined\n  } else {\n    return null\n  }\n\n  return (\n    <Box mb={theme.dimensions.standardMarginBetween}>\n      <AlertBox border={'error'} title={title} text={text} textA11yLabel={textA11yLabel} titleRole={'header'} />\n    </Box>\n  )\n}\nexport default MessageAlert\n",mdxType:"ComponentTopInfo"}))}g.isMDXComponent=!0}}]);