"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4398],{77800:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(67294),r=n(19055),l=n(26396),s=n(58215),o=n(82224),c=n(36005);const i=e=>{let{props:t}=e;return t?a.createElement(a.Fragment,null,c.ZP.isEmpty(t)?a.createElement("pre",{className:"preText"},"This component does not have param defined"):a.createElement("table",null,a.createElement("thead",null,a.createElement("tr",null,a.createElement("th",null,"Param / Return"),a.createElement("th",null,"Description"))),a.createElement("tbody",null,Object.keys(t).map((e=>a.createElement("tr",{key:e},a.createElement("td",null,a.createElement("code",null,e)),a.createElement("td",null,"param"===e?t[e].split("\n").map(((e,t)=>{let n=e.split("-");return a.createElement("div",{key:t},a.createElement("code",null,n[0].trim()+":"),"\ufeff"+n[1])})):t[e]))))))):null};function m(e){const t=(0,o.N)(e.componentName),{description:n,displayName:c,tags:m}=t[0],u=`How to use the ${c} component`;return a.createElement(a.Fragment,null,a.createElement(l.Z,null,a.createElement(s.Z,{value:"description",label:"Description"},a.createElement("pre",{className:"preText"},n)),a.createElement(s.Z,{value:"params",label:"Params and Return"},a.createElement(i,{props:m})),a.createElement(s.Z,{value:"example",label:"Example"},e.example&&a.createElement(r.Z,{title:u,className:"language-tsx test"},e.example))))}},82224:(e,t,n)=>{n.d(t,{N:()=>r});var a=n(28084);const r=e=>(0,a.default)()["docusaurus-plugin-react-docgen-typescript"].default.filter((t=>t.displayName===e))},42819:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>o,default:()=>p,exampleString:()=>m,frontMatter:()=>s,metadata:()=>c,toc:()=>i});var a=n(87462),r=(n(67294),n(3905)),l=(n(95657),n(77800));const s={},o=void 0,c={unversionedId:"Engineering/FrontEnd/CustomHooks/useHeaderStyles",id:"Engineering/FrontEnd/CustomHooks/useHeaderStyles",title:"useHeaderStyles",description:"export const exampleString = `const headerStyles = useHeaderStyles()\\n",source:"@site/docs/Engineering/FrontEnd/CustomHooks/useHeaderStyles.mdx",sourceDirName:"Engineering/FrontEnd/CustomHooks",slug:"/Engineering/FrontEnd/CustomHooks/useHeaderStyles",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/CustomHooks/useHeaderStyles",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"useHasCernerFacilities",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/CustomHooks/useHasCernerFacilities"},next:{title:"useIsScreenReaderEnabled",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/CustomHooks/useIsScreenReaderEnabled"}},i=[],m="const headerStyles = useHeaderStyles()\n\nreturn (\n    <HealthScreenStack.Navigator screenOptions={headerStyles}>\n        <HealthScreenStack.Screen name=\"Health\" component={HealthScreen} options={{ title: t('page.title') }} />\n    </HealthScreenStack.Navigator>\n)",u={toc:i,exampleString:m},d="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(l.Z,{componentName:"useHeaderStyles",example:m,mdxType:"HooksInfo"}))}p.isMDXComponent=!0}}]);