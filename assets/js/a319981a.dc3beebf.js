"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8345],{7950:function(n,e,o){o.r(e),o.d(e,{contentTitle:function(){return p},default:function(){return l},exampleString:function(){return u},frontMatter:function(){return c},metadata:function(){return d},toc:function(){return m}});var t=o(7462),r=o(3366),s=(o(7294),o(3905)),i=(o(9055),o(8909)),a=["components"],c={},p=void 0,d={unversionedId:"FrontEnd/ComponentsSection/TextArea",id:"FrontEnd/ComponentsSection/TextArea",isDocsHomePage:!1,title:"TextArea",description:"export const exampleString = `",source:"@site/docs/FrontEnd/ComponentsSection/TextArea.mdx",sourceDirName:"FrontEnd/ComponentsSection",slug:"/FrontEnd/ComponentsSection/TextArea",permalink:"/docs/FrontEnd/ComponentsSection/TextArea",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Switch",permalink:"/docs/FrontEnd/ComponentsSection/Switch"},next:{title:"TextLineWithIcon",permalink:"/docs/FrontEnd/ComponentsSection/TextLineWithIcon"}},m=[],u="<TextArea>\n    <VAButton \n    onPress={resetInAppReview} \n    label={'Reset In-App Review Actions'} \n    buttonType={ButtonTypesConstants.buttonPrimary} />\n</TextArea>",x={toc:m,exampleString:u};function l(n){var e=n.components,o=(0,r.Z)(n,a);return(0,s.kt)("wrapper",(0,t.Z)({},x,o,{components:e,mdxType:"MDXLayout"}),(0,s.kt)(i.Z,{componentName:"TextArea",example:u,codeString:"import { TouchableWithoutFeedback } from 'react-native'\nimport { useTheme } from 'utils/hooks'\nimport React, { FC } from 'react'\n\nimport Box, { BoxProps } from './Box'\n\n/**\n *  Signifies the props that need to be passed in to {@link TextArea}\n */\nexport type TextAreaProps = {\n  /** onPress callback */\n  onPress?: () => void\n  /** prop to remove border */\n  noBorder?: boolean\n}\n\n/**\n * Text area block for content\n *\n * @returns TextView component\n */\nconst TextArea: FC<TextAreaProps> = ({ onPress, noBorder, children }) => {\n  const theme = useTheme()\n\n  const borderProps: BoxProps = noBorder\n    ? {}\n    : {\n        borderStyle: 'solid',\n        borderBottomWidth: 'default',\n        borderBottomColor: 'primary',\n        borderTopWidth: 'default',\n        borderTopColor: 'primary',\n      }\n\n  const boxProps: BoxProps = {\n    backgroundColor: 'textBox',\n    p: theme.dimensions.cardPadding,\n  }\n\n  const _onPress = (): void => {\n    if (onPress) {\n      onPress()\n    }\n  }\n\n  if (onPress) {\n    return (\n      <TouchableWithoutFeedback onPress={_onPress}>\n        <Box {...boxProps}>{children}</Box>\n      </TouchableWithoutFeedback>\n    )\n  }\n\n  return (\n    <Box {...boxProps} {...borderProps}>\n      {children}\n    </Box>\n  )\n}\n\nexport default TextArea\n",mdxType:"ComponentTopInfo"}))}l.isMDXComponent=!0}}]);