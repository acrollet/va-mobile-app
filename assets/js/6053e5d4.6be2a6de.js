"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5584],{38909:function(e,t,n){n.d(t,{Z:function(){return u}});var r=n(67294),l=n(19055),o=n(26396),i=n(58215),a=n(82224),s=n(36005),c=function(e){var t=e.props;return t?r.createElement(r.Fragment,null,s.ZP.isEmpty(t)?r.createElement("pre",{className:"preText"},"This component does not have props defined"):r.createElement("table",null,r.createElement("thead",null,r.createElement("tr",null,r.createElement("th",null,"Name"),r.createElement("th",null,"Type"),r.createElement("th",null,"Default Value"),r.createElement("th",null,"Required"),r.createElement("th",null,"Description"))),r.createElement("tbody",null,Object.keys(t).map((function(e){var n;return r.createElement("tr",{key:e},r.createElement("td",null,r.createElement("code",null,e)),r.createElement("td",{style:{minWidth:200}},null==(n=t[e].type)?void 0:n.name),r.createElement("td",null,t[e].defaultValue&&t[e].defaultValue.value.toString()),r.createElement("td",null,t[e].required?"Yes":"No"),r.createElement("td",null,t[e].description))}))))):null};function u(e){var t=(0,a.N)(e.componentName)[0],n=t.description,s=t.displayName,u=t.props,d="How to use the "+s+" component",p="Full code for the "+s+" component";return r.createElement(r.Fragment,null,n,r.createElement("br",null),r.createElement("br",null),r.createElement(o.Z,null,r.createElement(i.Z,{value:"props",label:"Properties"},r.createElement(c,{props:u})),r.createElement(i.Z,{value:"example",label:"Example"},e.example&&r.createElement(l.Z,{title:d,className:"language-tsx test"},e.example)),r.createElement(i.Z,{value:"code",label:"Source Code"},e.codeString&&r.createElement(l.Z,{title:p,className:"language-tsx"},e.codeString)),r.createElement(i.Z,{value:"accessibility",label:"Accessibility"},r.createElement("pre",{className:"preText"},e.accessibilityInfo))))}},82224:function(e,t,n){n.d(t,{N:function(){return l}});var r=n(28084),l=function(e){return(0,r.default)()["docusaurus-plugin-react-docgen-typescript"].default.filter((function(t){return t.displayName===e}))}},66898:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return u},default:function(){return f},exampleString:function(){return m},frontMatter:function(){return c},metadata:function(){return d},toc:function(){return p}});var r=n(87462),l=n(63366),o=(n(67294),n(3905)),i=(n(19055),n(2809)),a=n(38909),s=(n.p,["components"]),c={},u=void 0,d={unversionedId:"UX/ComponentsSection/Alerts and Progress/AlertBox",id:"UX/ComponentsSection/Alerts and Progress/AlertBox",title:"AlertBox",description:"One or two sentences describing the purpose of this component.",source:"@site/docs/UX/ComponentsSection/Alerts and Progress/AlertBox.mdx",sourceDirName:"UX/ComponentsSection/Alerts and Progress",slug:"/UX/ComponentsSection/Alerts and Progress/AlertBox",permalink:"/va-mobile-app/docs/UX/ComponentsSection/Alerts and Progress/AlertBox",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"AccordionCollapsible",permalink:"/va-mobile-app/docs/UX/ComponentsSection/Alerts and Progress/AccordionCollapsible"},next:{title:"LoadingComponent",permalink:"/va-mobile-app/docs/UX/ComponentsSection/Alerts and Progress/LoadingComponent"}},p=[{value:"Usage",id:"usage",children:[],level:3},{value:"Example in practice",id:"example-in-practice",children:[],level:3},{value:"Best practices",id:"best-practices",children:[],level:3},{value:"Content guidelines",id:"content-guidelines",children:[],level:3},{value:"A11y",id:"a11y",children:[],level:3},{value:"Related components",id:"related-components",children:[],level:3},{value:"Engineering resources",id:"engineering-resources",children:[],level:2}],m='<AlertBox \n  title="Alert header text here" \n  text="Alert body text here"\n  textA11yLabel="Alert text a11y label here"\n  border="warning"\n/>',b={toc:p,exampleString:m};function f(e){var t=e.components,c=(0,l.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},b,c,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"One or two sentences describing the purpose of this component."),(0,o.kt)("iframe",{width:"800",height:"450",alt:"alt text goes here",src:"https://www.figma.com/embed?embed_host=share&url=https%3A%2F%2Fwww.figma.com%2Ffile%2FQVLPB3eOunmKrgQOuOt0SU%2FVAMobile-DesignLibrary1.0-%25F0%259F%2593%2590%3Fnode-id%3D638%253A1966%26t%3Diqk24DBhrvJTq9ln-1",allowfullscreen:!0}),(0,o.kt)("h3",{id:"usage"},"Usage"),(0,o.kt)("p",null,"[body text]"),(0,o.kt)("h3",{id:"example-in-practice"},"Example in practice"),(0,o.kt)("p",null,"[Example screenshot goes here - use public embed code in Figma Share modal if possible]"),(0,o.kt)("p",null,"[body text]"),(0,o.kt)("h3",{id:"best-practices"},"Best practices"),(0,o.kt)("p",null,"[body text]"),(0,o.kt)("h3",{id:"content-guidelines"},"Content guidelines"),(0,o.kt)("p",null,"[body text]"),(0,o.kt)("h3",{id:"a11y"},"A11y"),(0,o.kt)("p",null,"[body text]"),(0,o.kt)("h3",{id:"related-components"},"Related components"),(0,o.kt)("p",null,"[body text]"),(0,o.kt)("h2",{id:"engineering-resources"},"Engineering resources"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Docusaurus",src:n(26933).Z})),(0,o.kt)(a.Z,{componentName:"AlertBox",example:m,codeString:i.Z,mdxType:"ComponentTopInfo"}))}f.isMDXComponent=!0},2809:function(e,t){t.Z="import { AccessibilityRole, ScrollView, View } from 'react-native'\nimport React, { FC, RefObject, useEffect, useState } from 'react'\n\nimport { Box, BoxProps, TextView } from './index'\nimport { VABorderColors } from 'styles/theme'\nimport { triggerHaptic } from 'utils/haptics'\nimport { useAutoScrollToElement, useTheme } from 'utils/hooks'\n\nexport type AlertBoxProps = {\n  /** color of the border */\n  border: keyof VABorderColors\n  /** Optional boolean for determining when to focus on error alert boxes (e.g. onSaveClicked). */\n  focusOnError?: boolean\n  /** Optional ref for the parent scroll view. Used for scrolling to error alert boxes. */\n  scrollViewRef?: RefObject<ScrollView>\n  /** body of the alert */\n  text?: string\n  /** optional bolded title text */\n  title?: string\n  /** optional accessibility label for the text */\n  textA11yLabel?: string\n  /** optional accessibility label for the title */\n  titleA11yLabel?: string\n  /** optional accessibility role for the title */\n  titleRole?: AccessibilityRole\n}\n\n/**\n * Displays content in a box styled as an alert\n */\nconst AlertBox: FC<AlertBoxProps> = ({ border, children, focusOnError = true, scrollViewRef, title, text, textA11yLabel, titleA11yLabel, titleRole }) => {\n  const theme = useTheme()\n  const [scrollRef, viewRef, scrollToAlert] = useAutoScrollToElement()\n  const [shouldFocus, setShouldFocus] = useState(true)\n\n  const boxPadding = 20\n\n  useEffect(() => {\n    if (border === 'error' && scrollViewRef?.current && (title || text)) {\n      scrollRef.current = scrollViewRef.current\n      scrollToAlert(-boxPadding)\n    }\n    setShouldFocus(focusOnError)\n  }, [border, focusOnError, scrollRef, scrollToAlert, scrollViewRef, text, title])\n\n  const boxProps: BoxProps = {\n    backgroundColor: 'alertBox',\n    borderLeftWidth: theme.dimensions.alertBorderWidth,\n    borderLeftColor: border,\n    py: boxPadding,\n    px: boxPadding,\n  }\n\n  const vibrate = (): void => {\n    if (border === 'error') {\n      triggerHaptic('notificationError')\n    } else if (border === 'warning') {\n      triggerHaptic('notificationWarning')\n    }\n  }\n\n  const titleAccessibilityRole = titleRole ? titleRole : text || children ? 'header' : undefined\n\n  return (\n    <Box {...boxProps}>\n      {!!title && (\n        <View ref={viewRef} accessible={true} accessibilityLabel={titleA11yLabel || title} accessibilityRole={titleAccessibilityRole}>\n          <TextView variant=\"MobileBodyBold\" mb={text ? theme.dimensions.standardMarginBetween : 0}>\n            {title}\n          </TextView>\n        </View>\n      )}\n      {!!text && (\n        <View ref={!title ? viewRef : undefined} accessible={true} accessibilityLabel={textA11yLabel || text}>\n          <TextView paragraphSpacing={true} variant=\"MobileBody\">\n            {text}\n          </TextView>\n        </View>\n      )}\n      {children}\n      {shouldFocus && vibrate()}\n    </Box>\n  )\n}\n\nexport default AlertBox\n"},26933:function(e,t,n){t.Z=n.p+"assets/images/AlertBox-dfbe989b5e715813bc8ceae5501d4bc5.png"}}]);