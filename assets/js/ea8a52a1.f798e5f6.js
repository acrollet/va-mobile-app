"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[9899],{7800:function(e,t,n){n.d(t,{Z:function(){return l}});var a=n(7294),s=n(9055),r=n(6396),o=n(8215),i=n(2224),m=n(3490),c=function(e){var t=e.props;return t?a.createElement(a.Fragment,null,m.ZP.isEmpty(t)?a.createElement("pre",{className:"preText"},"This component does not have param defined"):a.createElement("table",null,a.createElement("thead",null,a.createElement("tr",null,a.createElement("th",null,"Param / Return"),a.createElement("th",null,"Description"))),a.createElement("tbody",null,Object.keys(t).map((function(e){return a.createElement("tr",{key:e},a.createElement("td",null,a.createElement("code",null,e)),a.createElement("td",null,"param"===e?t[e].split("\n").map((function(e,t){var n=e.split("-");return a.createElement("div",{key:t},a.createElement("code",null,n[0].trim()+":"),"\ufeff"+n[1])})):t[e]))}))))):null};function l(e){var t=(0,i.N)(e.componentName)[0],n=t.description,m=t.displayName,l=t.tags,u="How to use the "+m+" component";return a.createElement(a.Fragment,null,a.createElement(r.Z,null,a.createElement(o.Z,{value:"description",label:"Description"},a.createElement("pre",{className:"preText"},n)),a.createElement(o.Z,{value:"params",label:"Params and Return"},a.createElement(c,{props:l})),a.createElement(o.Z,{value:"example",label:"Example"},e.example&&a.createElement(s.Z,{title:u,className:"language-tsx test"},e.example))))}},9122:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return m},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return u},exampleString:function(){return d},default:function(){return h}});var a=n(7462),s=n(3366),r=(n(7294),n(3905)),o=n(7800),i=["components"],m={},c=void 0,l={unversionedId:"Engineering/FrontEnd/CustomHooks/useAttachments",id:"Engineering/FrontEnd/CustomHooks/useAttachments",isDocsHomePage:!1,title:"useAttachments",description:"export const exampleString = `const [attachmentsList, addAttachment, removeAttachment] = useAttachments()\\n",source:"@site/docs/Engineering/FrontEnd/CustomHooks/useAttachments.mdx",sourceDirName:"Engineering/FrontEnd/CustomHooks",slug:"/Engineering/FrontEnd/CustomHooks/useAttachments",permalink:"/docs/Engineering/FrontEnd/CustomHooks/useAttachments",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"useAccessibilityFocus",permalink:"/docs/Engineering/FrontEnd/CustomHooks/useAccessibilityFocus"},next:{title:"useAutoScrollToElement",permalink:"/docs/Engineering/FrontEnd/CustomHooks/useAutoScrollToElement"}},u=[],d="const [attachmentsList, addAttachment, removeAttachment] = useAttachments()\n\n useEffect(() => {\n    // if a file was just added, update attachmentsList and clear the route params for attachmentFileToAdd\n    if (!_.isEmpty(attachmentFileToAdd) && !attachmentsList.includes(attachmentFileToAdd)) {\n      addAttachment(attachmentFileToAdd)\n      navigation.setParams({ attachmentFileToAdd: {} })\n    }\n  }, [attachmentFileToAdd, attachmentsList, addAttachment, navigation])\n\n{\n    fieldType: FieldType.FormAttachmentsList,\n    fieldProps: {\n    originHeader: t('secureMessaging.drafts.edit'),\n    removeOnPress: removeAttachment,\n    largeButtonProps:\n        attachmentsList.length < theme.dimensions.maxNumMessageAttachments\n        ? {\n            label: t('secureMessaging.formMessage.addFiles'),\n            a11yHint: t('secureMessaging.formMessage.addFiles.a11yHint'),\n            onPress: onAddFiles,\n            }\n        : undefined,\n    attachmentsList,\n    a11yHint: t('secureMessaging.attachments.howToAttachAFile.a11y'),\n},",p={toc:u,exampleString:d};function h(e){var t=e.components,n=(0,s.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(o.Z,{componentName:"useAttachments",example:d,mdxType:"HooksInfo"}))}h.isMDXComponent=!0}}]);