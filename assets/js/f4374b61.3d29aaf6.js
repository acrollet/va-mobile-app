"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[462],{67465:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return r},metadata:function(){return p},toc:function(){return d},default:function(){return g}});var o=n(87462),a=n(63366),i=(n(67294),n(3905)),l=["components"],s={},r="Debugging Instructions",p={unversionedId:"Engineering/FrontEnd/DebuggingTools/DebuggingToolsInstructions",id:"Engineering/FrontEnd/DebuggingTools/DebuggingToolsInstructions",title:"Debugging Instructions",description:"This page shows the different debug tools that we use to debug the VAMobile app. You can use your prefer method.",source:"@site/docs/Engineering/FrontEnd/DebuggingTools/DebuggingToolsInstructions.md",sourceDirName:"Engineering/FrontEnd/DebuggingTools",slug:"/Engineering/FrontEnd/DebuggingTools/DebuggingToolsInstructions",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/DebuggingTools/DebuggingToolsInstructions",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Development Setup Instructions",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/DevSetupInstructions/DevSetupProcess"},next:{title:"Downtime Messages",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/Downtime Messages/DowntimeMessages"}},d=[{value:"Launching The Debugger",id:"launching-the-debugger",children:[{value:"IOS",id:"ios",children:[],level:3},{value:"Android",id:"android",children:[],level:3}],level:2},{value:"Debugging Tools",id:"debugging-tools",children:[{value:"Chrome Developers Tools",id:"chrome-developers-tools",children:[],level:3},{value:"React Developer Tools (standalone application)",id:"react-developer-tools-standalone-application",children:[],level:3},{value:"VSCode React Native Tools Extension",id:"vscode-react-native-tools-extension",children:[],level:3}],level:2}],c={toc:d};function g(e){var t=e.components,s=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,o.Z)({},c,s,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"debugging-instructions"},"Debugging Instructions"),(0,i.kt)("p",null,"This page shows the different debug tools that we use to debug the VAMobile app. You can use your prefer method."),(0,i.kt)("div",{className:"admonition admonition-important alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"  For all the debugging tools you need to ",(0,i.kt)("inlineCode",{parentName:"p"},"yarn start")," the ",(0,i.kt)("inlineCode",{parentName:"p"},"metro server")," so that the debugger can  connect to it or it will not work."))),(0,i.kt)("h2",{id:"launching-the-debugger"},"Launching The Debugger"),(0,i.kt)("p",null,"This section will apply to all the tools. More information on the ",(0,i.kt)("a",{parentName:"p",href:"https://reactnative.dev/docs/debugging"},"react native debugging page")),(0,i.kt)("h3",{id:"ios"},"IOS"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"If on ",(0,i.kt)("inlineCode",{parentName:"p"},"physical device Shake your device"),". If using a ",(0,i.kt)("inlineCode",{parentName:"p"},"simulator")," press the shortcut  ",(0,i.kt)("inlineCode",{parentName:"p"},"\u2318D")," or by selecting the ",(0,i.kt)("inlineCode",{parentName:"p"},"Shake Gesture")," inside the hardware menu in the simulator.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"On the Action Sheet select ",(0,i.kt)("inlineCode",{parentName:"p"},"Debug with Chrome")),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("img",{alt:"IOS Debug Menu",src:n(89193).Z})," "))),(0,i.kt)("h3",{id:"android"},"Android"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Ff on ",(0,i.kt)("inlineCode",{parentName:"p"},"physical device Shake your device"),". If using a ",(0,i.kt)("inlineCode",{parentName:"p"},"emulator")," press the shortcut  ",(0,i.kt)("inlineCode",{parentName:"p"},"\u2318M"),".")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"On the dialog select ",(0,i.kt)("inlineCode",{parentName:"p"},"Debug")),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("img",{alt:"Android Debug Menu",src:n(29588).Z})," "))),(0,i.kt)("h2",{id:"debugging-tools"},"Debugging Tools"),(0,i.kt)("p",null," This sections shows the different debugging tools you can use. By default the chrome developers tools will open if no other tool is already open."),(0,i.kt)("div",{className:"admonition admonition-important alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"You must have only the tool you want to use open so that the debugger connects to it."))),(0,i.kt)("h3",{id:"chrome-developers-tools"},"Chrome Developers Tools"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Launch the debugger from the device debug menu.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"React Native Debugger")," page will open in Chrome on url ",(0,i.kt)("inlineCode",{parentName:"p"},"http://localhost:8081/debugger-ui/"),". You will know if the device is connected in the ",(0,i.kt)("inlineCode",{parentName:"p"},"Status")," section."),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("img",{alt:"React Native Debugger",src:n(64234).Z})," ")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Open the developers tools. From the developers tools you can see the elements, console outputs and source files."),(0,i.kt)("p",{parentName:"li"},"In the element you can see the html tree."),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("img",{alt:"Chrome Dev Tools Element",src:n(55885).Z})," "),(0,i.kt)("p",{parentName:"li"},"In the console you can see the redux logout messages and other console outputs."),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("img",{alt:"Chrome Dev Tools Console",src:n(75916).Z})," "),(0,i.kt)("p",{parentName:"li"},"In the source under debuggerWorker you can find the javascript files that you can put breakpoints."),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("img",{alt:"Chrome Dev Tools Source",src:n(83262).Z})," "))),(0,i.kt)("h3",{id:"react-developer-tools-standalone-application"},"React Developer Tools (standalone application)"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"If not installed yet follow the installation instructions in the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/tree/main/packages/react-devtools"},"react standalone page")," to install it.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"If installed of after the installation launch the react devtools standalone app.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Launch the debugger from your device."),(0,i.kt)("p",{parentName:"li"},"With the standalone you can see the redux messages with the redux devtools, see the element tree and console logs in the console tab."),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("img",{alt:"React Dev Tools",src:n(51702).Z})," "),(0,i.kt)("p",{parentName:"li"},"In the source tab under RNDebuggerWorker you can find the javascripts to add breakpoints to."),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("img",{alt:"React Dev Tools Source",src:n(42558).Z})," "),(0,i.kt)("p",{parentName:"li"},"If you right click on the redux devtools section you will get a popup to enable network calls. This will allow you to see the calls and response done to the api."),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("img",{alt:"React Dev Tools Enable Network",src:n(50607).Z})," "),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("img",{alt:"React Dev Tools Network",src:n(78326).Z})," "))),(0,i.kt)("h3",{id:"vscode-react-native-tools-extension"},"VSCode React Native Tools Extension"),(0,i.kt)("p",null," This extension will allow you to add breakpoints on the actual code in VSCode."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"If not installed install the React Native Tools extension in VSCode and follow the setup instructions in the extensions document."),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("img",{alt:"React Tools VSCode",src:n(35032).Z})," ")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"After the extension is installed launch the debugger. Select the Run and Debug Icon on the left explorer and click the play button on the Attach tp packager dropdown."),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("img",{alt:"Launch Debugger",src:n(46851).Z})," ")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Launch the debugger from your device."),(0,i.kt)("p",{parentName:"li"},"The debugger should attach to the VSCode debugger and stop on any breakpoints"),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("img",{alt:"VSCode breakpoint",src:n(35235).Z})))))}g.isMDXComponent=!0},29588:function(e,t,n){t.Z=n.p+"assets/images/android-debug-dialog-0b232400fca92aba85dfe96234776201.jpg"},64234:function(e,t,n){t.Z=n.p+"assets/images/chrome-debug-screen-0007275fbc695f77e87d6bfa6b5cd445.png"},75916:function(e,t,n){t.Z=n.p+"assets/images/chrome-dev-tools-console-8f6d577a4436f7363affdf6ee9e5a8df.png"},55885:function(e,t,n){t.Z=n.p+"assets/images/chrome-dev-tools-element-5405dc5c743c7a7817890b1b79161467.png"},83262:function(e,t,n){t.Z=n.p+"assets/images/chrome-dev-tools-source-95b94d89b81aaa617ced3efbdfba6a48.png"},89193:function(e,t,n){t.Z=n.p+"assets/images/ios-debug-action-sheet-40fde13a7f681ed096be628dad4fef65.png"},50607:function(e,t,n){t.Z=n.p+"assets/images/react-dev-tools-enable-network-e91d27fcacbc09156418cbd59031a2e2.png"},78326:function(e,t,n){t.Z=n.p+"assets/images/react-dev-tools-network-b641a4c87a984c2f9d07963f977a245f.png"},42558:function(e,t,n){t.Z=n.p+"assets/images/react-dev-tools-source-784275b853cb8b0f7ca096de61a09c67.png"},51702:function(e,t,n){t.Z=n.p+"assets/images/react-dev-tools-08c62e4174dbae25bb4cdd8713f8878e.png"},35235:function(e,t,n){t.Z=n.p+"assets/images/vscode-debugger-breakpoint-baeb8544624e79e49eeba2633eeca65a.png"},46851:function(e,t,n){t.Z=n.p+"assets/images/vscode-launch-debugger-3013c3378edccb8d9baf53de7dab6595.png"},35032:function(e,t,n){t.Z=n.p+"assets/images/vscode-react-tools-ext-d8a554f524ac4d4f0374288bf3170273.png"}}]);