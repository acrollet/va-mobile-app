"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3514],{38909:function(e,n,t){t.d(n,{Z:function(){return c}});var a=t(67294),o=t(19055),r=t(26396),l=t(58215),s=t(82224),i=t(36005),u=function(e){var n=e.props;return n?a.createElement(a.Fragment,null,i.ZP.isEmpty(n)?a.createElement("pre",{className:"preText"},"This component does not have props defined"):a.createElement("table",null,a.createElement("thead",null,a.createElement("tr",null,a.createElement("th",null,"Name"),a.createElement("th",null,"Type"),a.createElement("th",null,"Default Value"),a.createElement("th",null,"Required"),a.createElement("th",null,"Description"))),a.createElement("tbody",null,Object.keys(n).map((function(e){var t;return a.createElement("tr",{key:e},a.createElement("td",null,a.createElement("code",null,e)),a.createElement("td",{style:{minWidth:200}},null==(t=n[e].type)?void 0:t.name),a.createElement("td",null,n[e].defaultValue&&n[e].defaultValue.value.toString()),a.createElement("td",null,n[e].required?"Yes":"No"),a.createElement("td",null,n[e].description))}))))):null};function c(e){var n=(0,s.N)(e.componentName)[0],t=n.description,i=n.displayName,c=n.props,m="How to use the "+i+" component",p="Full code for the "+i+" component";return a.createElement(a.Fragment,null,t,a.createElement("br",null),a.createElement("br",null),a.createElement(r.Z,null,a.createElement(l.Z,{value:"props",label:"Properties"},a.createElement(u,{props:c})),a.createElement(l.Z,{value:"example",label:"Example"},e.example&&a.createElement(o.Z,{title:m,className:"language-tsx test"},e.example)),a.createElement(l.Z,{value:"code",label:"Source Code"},e.codeString&&a.createElement(o.Z,{title:p,className:"language-tsx"},e.codeString)),a.createElement(l.Z,{value:"accessibility",label:"Accessibility"},a.createElement("pre",{className:"preText"},e.accessibilityInfo))))}},69298:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return u},default:function(){return d},exampleString:function(){return p},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return m}});var a=t(87462),o=t(63366),r=(t(67294),t(3905)),l=(t(19055),t(38909)),s=["components"],i={},u=void 0,c={unversionedId:"Engineering/FrontEnd/ComponentsSection/Tags/MessagesCountTag",id:"Engineering/FrontEnd/ComponentsSection/Tags/MessagesCountTag",title:"MessagesCountTag",description:"",source:"@site/docs/Engineering/FrontEnd/ComponentsSection/Tags/MessagesCountTag.mdx",sourceDirName:"Engineering/FrontEnd/ComponentsSection/Tags",slug:"/Engineering/FrontEnd/ComponentsSection/Tags/MessagesCountTag",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/ComponentsSection/Tags/MessagesCountTag",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"LabelTag",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/ComponentsSection/Tags/LabelTag"},next:{title:"TextArea",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/ComponentsSection/Text Views/TextArea"}},m=[],p="<MessagesCountTag unread={tagCount} />",g={toc:m,exampleString:p};function d(e){var n=e.components,t=(0,o.Z)(e,s);return(0,r.kt)("wrapper",(0,a.Z)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)(l.Z,{componentName:"MessagesCountTag",example:p,codeString:"import { testIdProps } from 'utils/accessibility'\nimport { useTheme } from 'utils/hooks'\nimport Box from './Box'\nimport React, { FC } from 'react'\nimport TextView from './TextView'\n\nexport type CountTagProps = {\n  /**number to be shown on the tag */\n  unread: number\n}\n\n/**A common component to show a count of a particular item within a page before clicking to enter that page. For example, this tag would be used to display the number of unread messages in one's inbox. */\nconst MessagesCountTag: FC<CountTagProps> = ({ unread }) => {\n  const theme = useTheme()\n  return (\n    <Box\n      minWidth={theme.dimensions.tagMinWidth}\n      justifyContent={'center'}\n      alignSelf={'center'}\n      backgroundColor=\"unreadMessagesTag\"\n      borderRadius={2}\n      {...testIdProps(unread.toString())}\n      accessible={true}>\n      <TextView flexWrap={'wrap'} variant=\"UnreadMessagesTag\" px={10} pt={3}>\n        {unread}\n      </TextView>\n    </Box>\n  )\n}\n\nexport default MessagesCountTag\n",mdxType:"ComponentTopInfo"}))}d.isMDXComponent=!0}}]);