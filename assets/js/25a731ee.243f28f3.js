"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[17],{38909:function(e,t,n){n.d(t,{Z:function(){return m}});var l=n(67294),a=n(19055),r=n(26396),i=n(58215),o=n(82224),c=n(36005),s=function(e){var t=e.props;return t?l.createElement(l.Fragment,null,c.ZP.isEmpty(t)?l.createElement("pre",{className:"preText"},"This component does not have props defined"):l.createElement("table",null,l.createElement("thead",null,l.createElement("tr",null,l.createElement("th",null,"Name"),l.createElement("th",null,"Type"),l.createElement("th",null,"Default Value"),l.createElement("th",null,"Required"),l.createElement("th",null,"Description"))),l.createElement("tbody",null,Object.keys(t).map((function(e){var n;return l.createElement("tr",{key:e},l.createElement("td",null,l.createElement("code",null,e)),l.createElement("td",{style:{minWidth:200}},null==(n=t[e].type)?void 0:n.name),l.createElement("td",null,t[e].defaultValue&&t[e].defaultValue.value.toString()),l.createElement("td",null,t[e].required?"Yes":"No"),l.createElement("td",null,t[e].description))}))))):null};function m(e){var t=(0,o.N)(e.componentName)[0],n=t.description,c=t.displayName,m=t.props,u="How to use the "+c+" component",d="Full code for the "+c+" component";return l.createElement(l.Fragment,null,n,l.createElement("br",null),l.createElement("br",null),l.createElement(r.Z,null,l.createElement(i.Z,{value:"props",label:"Properties"},l.createElement(s,{props:m})),l.createElement(i.Z,{value:"example",label:"Example"},e.example&&l.createElement(a.Z,{title:u,className:"language-tsx test"},e.example)),l.createElement(i.Z,{value:"code",label:"Source Code"},e.codeString&&l.createElement(a.Z,{title:d,className:"language-tsx"},e.codeString)),l.createElement(i.Z,{value:"accessibility",label:"Accessibility"},l.createElement("pre",{className:"preText"},e.accessibilityInfo))))}},87209:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return s},default:function(){return f},exampleString:function(){return d},frontMatter:function(){return c},metadata:function(){return m},toc:function(){return u}});var l=n(87462),a=n(63366),r=(n(67294),n(3905)),i=(n(19055),n(38909)),o=["components"],c={},s=void 0,m={unversionedId:"Engineering/FrontEnd/ComponentsSection/HeaderTitle",id:"Engineering/FrontEnd/ComponentsSection/HeaderTitle",title:"HeaderTitle",description:"export const exampleString = `useEffect(() => {",source:"@site/docs/Engineering/FrontEnd/ComponentsSection/HeaderTitle.mdx",sourceDirName:"Engineering/FrontEnd/ComponentsSection",slug:"/Engineering/FrontEnd/ComponentsSection/HeaderTitle",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/ComponentsSection/HeaderTitle",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"FooterButton",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/ComponentsSection/FooterButton"},next:{title:"LargeNavButton",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/ComponentsSection/LargeNavButton"}},u=[],d="useEffect(() => {\n    navigation.setOptions({\n      // using react-navigation internal HeaderTitle component to easily maintain font and styling while being able to add an accessibilityLabel\n      headerTitle: (header) => <HeaderTitle {...testIdProps('contactVA.title.a11yLabel')} headerTitle={header.children} />,\n    })\n})",p={toc:u,exampleString:d};function f(e){var t=e.components,n=(0,a.Z)(e,o);return(0,r.kt)("wrapper",(0,l.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(i.Z,{componentName:"HeaderTitle",example:d,codeString:"import { StyleSheet, View } from 'react-native'\nimport { TextView } from 'components'\nimport { useTheme } from 'utils/hooks'\nimport React, { FC, Ref } from 'react'\n\nexport type HeaderTitleProps = {\n  /** ref for this component*/\n  focusRef?: Ref<View>\n  /**sets the header title*/\n  headerTitle?: string\n  /** sets if it is accessible*/\n  accessible?: boolean\n  /** sets the test id*/\n  testID?: string\n  /**sets the accessibility label*/\n  accessabilityLabel?: string\n}\n\n/**Common component used for the navigation header title*/\nconst HeaderTitle: FC<HeaderTitleProps> = ({ focusRef, headerTitle, testID, accessabilityLabel, accessible = true }) => {\n  const {\n    dimensions: { headerHeight },\n  } = useTheme()\n\n  const combinestyle = StyleSheet.flatten([{ height: headerHeight }, defaultStyle.headerText])\n  return (\n    <View ref={focusRef} accessibilityRole=\"header\" accessible={accessible} style={combinestyle} testID={testID} accessibilityLabel={accessabilityLabel}>\n      <TextView accessible={false} importantForAccessibility={'no'} color={'primaryContrast'} allowFontScaling={false}>\n        {headerTitle}\n      </TextView>\n    </View>\n  )\n}\n\nconst defaultStyle = StyleSheet.create({\n  headerText: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n  },\n})\nexport default HeaderTitle\n",mdxType:"ComponentTopInfo"}))}f.isMDXComponent=!0}}]);