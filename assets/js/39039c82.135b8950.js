"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5440],{77800:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(67294),r=n(19055),s=n(26396),l=n(58215),o=n(82224),i=n(36005);const d=e=>{let{props:t}=e;return t?a.createElement(a.Fragment,null,i.ZP.isEmpty(t)?a.createElement("pre",{className:"preText"},"This component does not have param defined"):a.createElement("table",null,a.createElement("thead",null,a.createElement("tr",null,a.createElement("th",null,"Param / Return"),a.createElement("th",null,"Description"))),a.createElement("tbody",null,Object.keys(t).map((e=>a.createElement("tr",{key:e},a.createElement("td",null,a.createElement("code",null,e)),a.createElement("td",null,"param"===e?t[e].split("\n").map(((e,t)=>{let n=e.split("-");return a.createElement("div",{key:t},a.createElement("code",null,n[0].trim()+":"),"\ufeff"+n[1])})):t[e]))))))):null};function m(e){const t=(0,o.N)(e.componentName),{description:n,displayName:i,tags:m}=t[0],p=`How to use the ${i} component`;return a.createElement(a.Fragment,null,a.createElement(s.Z,null,a.createElement(l.Z,{value:"description",label:"Description"},a.createElement("pre",{className:"preText"},n)),a.createElement(l.Z,{value:"params",label:"Params and Return"},a.createElement(d,{props:m})),a.createElement(l.Z,{value:"example",label:"Example"},e.example&&a.createElement(r.Z,{title:p,className:"language-tsx test"},e.example))))}},82224:(e,t,n)=>{n.d(t,{N:()=>r});var a=n(28084);const r=e=>(0,a.default)()["docusaurus-plugin-react-docgen-typescript"].default.filter((t=>t.displayName===e))},25082:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>o,default:()=>u,exampleString:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>d});var a=n(87462),r=(n(67294),n(3905)),s=(n(95657),n(77800));const l={},o=void 0,i={unversionedId:"Engineering/FrontEnd/CustomHooks/useTopPaddingAsHeaderStyles",id:"Engineering/FrontEnd/CustomHooks/useTopPaddingAsHeaderStyles",title:"useTopPaddingAsHeaderStyles",description:"export const exampleString = `const topPaddingAsHeaderStyles = useTopPaddingAsHeaderStyles()\\n",source:"@site/docs/Engineering/FrontEnd/CustomHooks/useTopPaddingAsHeaderStyles.mdx",sourceDirName:"Engineering/FrontEnd/CustomHooks",slug:"/Engineering/FrontEnd/CustomHooks/useTopPaddingAsHeaderStyles",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/CustomHooks/useTopPaddingAsHeaderStyles",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"useTheme",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/CustomHooks/useTheme"},next:{title:"useValidateMessageWithSignature",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/CustomHooks/useValidateMessageWithSignature"}},d=[],m="const topPaddingAsHeaderStyles = useTopPaddingAsHeaderStyles()\n\n<Stack.Navigator>\n        <Stack.Screen name=\"Splash\" component={SplashScreen} options={{ ...topPaddingAsHeaderStyles, title: 'SplashScreen' }} />\n</Stack.Navigator>",p={toc:d,exampleString:m},c="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(s.Z,{componentName:"useTopPaddingAsHeaderStyles",example:m,mdxType:"HooksInfo"}))}u.isMDXComponent=!0}}]);