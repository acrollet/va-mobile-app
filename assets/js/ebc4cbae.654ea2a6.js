"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6403],{32666:(e,t,n)=>{n.d(t,{Z:()=>m});var o=n(67294),r=n(97405),s=n(22808),a=n(30433),l=n(41284),i=n(36005);const c=e=>{let{props:t}=e;return t?o.createElement(o.Fragment,null,i.ZP.isEmpty(t)?o.createElement("pre",{className:"preText"},"This component does not have props defined"):o.createElement("table",null,o.createElement("thead",null,o.createElement("tr",null,o.createElement("th",null,"Name"),o.createElement("th",null,"Type"),o.createElement("th",null,"Default Value"),o.createElement("th",null,"Required"),o.createElement("th",null,"Description"))),o.createElement("tbody",null,Object.keys(t).map((e=>o.createElement("tr",{key:e},o.createElement("td",null,o.createElement("code",null,e)),o.createElement("td",{style:{minWidth:200}},t[e].type?.name),o.createElement("td",null,t[e].defaultValue&&t[e].defaultValue.value.toString()),o.createElement("td",null,t[e].required?"Yes":"No"),o.createElement("td",null,t[e].description))))))):null};function m(e){const t=(0,l.N)(e.componentName),{description:n,displayName:i,props:m}=t[0],u=`How to use the ${i} component`,p=`Full code for the ${i} component`;return o.createElement(o.Fragment,null,n,o.createElement("br",null),o.createElement("br",null),o.createElement(s.Z,null,o.createElement(a.Z,{value:"props",label:"Properties"},o.createElement(c,{props:m})),o.createElement(a.Z,{value:"example",label:"Example"},e.example&&o.createElement(r.Z,{title:u,className:"language-tsx test"},e.example)),o.createElement(a.Z,{value:"code",label:"Source Code"},e.codeString&&o.createElement(r.Z,{title:p,className:"language-tsx"},e.codeString)),o.createElement(a.Z,{value:"accessibility",label:"Accessibility"},o.createElement("pre",{className:"preText"},e.accessibilityInfo))))}},41284:(e,t,n)=>{n.d(t,{N:()=>r});var o=n(52426);const r=e=>(0,o.ZP)()["docusaurus-plugin-react-docgen-typescript"].default.filter((t=>t.displayName===e))},44442:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>i,default:()=>f,exampleString:()=>p,frontMatter:()=>l,metadata:()=>c,toc:()=>u});var o=n(87462),r=(n(67294),n(3905));n(8209),n(97405);const s="import React, { FC, useState } from 'react'\n\nimport { Pressable, PressableProps } from 'react-native'\nimport { SafeAreaView } from 'react-native-safe-area-context'\nimport { VAButtonTextColors, VATextColors } from '../styles/theme'\nimport { a11yHintProp, testIdProps } from 'utils/accessibility'\nimport { themeFn } from 'utils/theme'\nimport { useTheme } from 'utils/hooks'\nimport Box, { BackgroundVariant, BoxProps } from './Box'\nimport TextView from './TextView'\nimport VAIcon, { VAIconProps } from './VAIcon'\nimport styled from 'styled-components'\n\nexport type FooterButtonProps = {\n  /** text that will display on the button */\n  text: string\n  /** text color */\n  textColor?: keyof VATextColors | keyof VAButtonTextColors\n  /** props for icon */\n  iconProps?: VAIconProps\n  /** function called when pressed */\n  onPress?: () => void\n  /** background color */\n  backGroundColor?: BackgroundVariant\n  /** test id */\n  testID?: string\n  /** optional accessibility hint */\n  a11yHint?: string\n}\n\nconst StyledSafeAreaView = styled(SafeAreaView)`\n  background-color: ${themeFn((theme) => theme.colors.background.navButton)};\n`\n/**A common component to show a button at the bottom of the screen that takes the full width of the display. Optional Icon can be passed in to render next to text */\nconst FooterButton: FC<FooterButtonProps> = ({ text, iconProps, onPress, textColor, backGroundColor, testID, a11yHint }) => {\n  const theme = useTheme()\n\n  const [isPressed, setIsPressed] = useState(false)\n\n  const getTextColor = (): keyof VATextColors | keyof VAButtonTextColors => {\n    if (textColor) {\n      return textColor\n    }\n\n    return isPressed ? 'footerButtonActive' : 'footerButton'\n  }\n\n  const pressableProps: PressableProps = {\n    onPress,\n    onPressIn: (): void => setIsPressed(true),\n    onPressOut: (): void => setIsPressed(false),\n    accessibilityRole: 'button',\n    accessible: true,\n  }\n\n  const boxProps: BoxProps = {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    backgroundColor: backGroundColor ? backGroundColor : isPressed ? 'footerButtonActive' : 'navButton',\n    borderTopColor: 'footerButton',\n    borderTopWidth: 'default',\n    minHeight: theme.dimensions.navBarHeight,\n    py: theme.dimensions.buttonPadding,\n    px: theme.dimensions.cardPadding,\n  }\n\n  return (\n    <StyledSafeAreaView edges={['bottom']}>\n      <Pressable {...pressableProps} {...testIdProps(testID || text)} {...a11yHintProp(a11yHint || '')}>\n        <Box {...boxProps}>\n          {iconProps && (\n            <Box mr={theme.dimensions.condensedMarginBetween}>\n              <VAIcon fill={isPressed ? 'footerButtonActive' : 'footerButton'} width={22} height={22} preventScaling={true} {...iconProps} />\n            </Box>\n          )}\n          <TextView variant=\"MobileBodyBold\" allowFontScaling={false} color={getTextColor()} mr={theme.dimensions.textIconMargin}>\n            {text}\n          </TextView>\n        </Box>\n      </Pressable>\n    </StyledSafeAreaView>\n  )\n}\n\nexport default FooterButton\n";var a=n(32666);const l={},i=void 0,c={unversionedId:"Flagship design library/Components/Buttons and Links/FooterButton",id:"Flagship design library/Components/Buttons and Links/FooterButton",title:"FooterButton",description:"",source:"@site/docs/Flagship design library/Components/Buttons and Links/FooterButton.mdx",sourceDirName:"Flagship design library/Components/Buttons and Links",slug:"/Flagship design library/Components/Buttons and Links/FooterButton",permalink:"/va-mobile-app/docs/Flagship design library/Components/Buttons and Links/FooterButton",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"CtaButton",permalink:"/va-mobile-app/docs/Flagship design library/Components/Buttons and Links/CtaButton"},next:{title:"VAButton",permalink:"/va-mobile-app/docs/Flagship design library/Components/Buttons and Links/VAButton"}},m={},u=[],p="<FooterButton \ntext='test' \niconProps={{ name: 'Compose' }} \nbackgroundColor='main' \ntestID='test-id' />",d={toc:u,exampleString:p},b="wrapper";function f(e){let{components:t,...n}=e;return(0,r.kt)(b,(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(a.Z,{componentName:"FooterButton",example:p,codeString:s,mdxType:"ComponentTopInfo"}))}f.isMDXComponent=!0}}]);