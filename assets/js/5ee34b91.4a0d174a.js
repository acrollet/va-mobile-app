"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4206],{2157:function(n,e,t){t.r(e),t.d(e,{contentTitle:function(){return a},default:function(){return A},exampleString:function(){return c},frontMatter:function(){return m},metadata:function(){return d},toc:function(){return u}});var o=t(7462),r=t(3366),i=(t(7294),t(3905)),p=(t(9055),t(8909)),s=["components"],m={},a=void 0,d={unversionedId:"FrontEnd/ComponentsSection/AppVersionAndBuild",id:"FrontEnd/ComponentsSection/AppVersionAndBuild",isDocsHomePage:!1,title:"AppVersionAndBuild",description:"",source:"@site/docs/FrontEnd/ComponentsSection/AppVersionAndBuild.mdx",sourceDirName:"FrontEnd/ComponentsSection",slug:"/FrontEnd/ComponentsSection/AppVersionAndBuild",permalink:"/va-mobile-app/docs/FrontEnd/ComponentsSection/AppVersionAndBuild",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"AlertBox",permalink:"/va-mobile-app/docs/FrontEnd/ComponentsSection/AlertBox"},next:{title:"AttachmentLink",permalink:"/va-mobile-app/docs/FrontEnd/ComponentsSection/AttachmentLink"}},u=[],c="<AppVersionAndBuild textColor={'primaryContrast'} />",l={toc:u,exampleString:c};function A(n){var e=n.components,t=(0,r.Z)(n,s);return(0,i.kt)("wrapper",(0,o.Z)({},l,t,{components:e,mdxType:"MDXLayout"}),(0,i.kt)(p.Z,{componentName:"AppVersionAndBuild",example:c,codeString:"import React, { FC } from 'react'\n\nimport { Box, TextView } from 'components'\nimport { NAMESPACE } from 'constants/namespaces'\nimport { VATextColors, VATypographyThemeVariants } from 'styles/theme'\nimport { buildNumber, versionName } from 'utils/deviceData'\nimport { useTheme, useTranslation } from 'utils/hooks'\n\nexport type AppVersionAndBuildProps = {\n  /** color of the text */\n  textColor?: keyof VATextColors\n  /** font weight of the text */\n  textWeight?: keyof VATypographyThemeVariants\n}\n\n/**\n * Common component to display the apps version and build number\n */\nconst AppVersionAndBuild: FC<AppVersionAndBuildProps> = ({ textColor = 'primary', textWeight = 'MobileBody' }) => {\n  const t = useTranslation(NAMESPACE.COMMON)\n  const theme = useTheme()\n\n  return (\n    <Box mb={theme.dimensions.contentMarginBottom} justifyContent={'center'} alignItems={'center'}>\n      <TextView variant={textWeight} flexDirection=\"row\" color={textColor}>\n        {t('versionAndBuild', { versionName, buildNumber })}\n      </TextView>\n    </Box>\n  )\n}\n\nexport default AppVersionAndBuild\n",mdxType:"ComponentTopInfo"}))}A.isMDXComponent=!0}}]);