"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[525],{38909:function(e,t,n){n.d(t,{Z:function(){return m}});var o=n(67294),i=n(19055),r=n(26396),l=n(58215),s=n(82224),c=n(36005),a=function(e){var t=e.props;return t?o.createElement(o.Fragment,null,c.ZP.isEmpty(t)?o.createElement("pre",{className:"preText"},"This component does not have props defined"):o.createElement("table",null,o.createElement("thead",null,o.createElement("tr",null,o.createElement("th",null,"Name"),o.createElement("th",null,"Type"),o.createElement("th",null,"Default Value"),o.createElement("th",null,"Required"),o.createElement("th",null,"Description"))),o.createElement("tbody",null,Object.keys(t).map((function(e){var n;return o.createElement("tr",{key:e},o.createElement("td",null,o.createElement("code",null,e)),o.createElement("td",{style:{minWidth:200}},null==(n=t[e].type)?void 0:n.name),o.createElement("td",null,t[e].defaultValue&&t[e].defaultValue.value.toString()),o.createElement("td",null,t[e].required?"Yes":"No"),o.createElement("td",null,t[e].description))}))))):null};function m(e){var t=(0,s.N)(e.componentName)[0],n=t.description,c=t.displayName,m=t.props,p="How to use the "+c+" component",u="Full code for the "+c+" component";return o.createElement(o.Fragment,null,n,o.createElement("br",null),o.createElement("br",null),o.createElement(r.Z,null,o.createElement(l.Z,{value:"props",label:"Properties"},o.createElement(a,{props:m})),o.createElement(l.Z,{value:"example",label:"Example"},e.example&&o.createElement(i.Z,{title:p,className:"language-tsx test"},e.example)),o.createElement(l.Z,{value:"code",label:"Source Code"},e.codeString&&o.createElement(i.Z,{title:u,className:"language-tsx"},e.codeString)),o.createElement(l.Z,{value:"accessibility",label:"Accessibility"},o.createElement("pre",{className:"preText"},e.accessibilityInfo))))}},8487:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return a},default:function(){return E},exampleString:function(){return u},frontMatter:function(){return c},metadata:function(){return m},toc:function(){return p}});var o=n(87462),i=n(63366),r=(n(67294),n(3905)),l=(n(19055),n(38909)),s=["components"],c={},a=void 0,m={unversionedId:"Engineering/FrontEnd/ComponentsSection/Form/PickerList",id:"Engineering/FrontEnd/ComponentsSection/Form/PickerList",title:"PickerList",description:"",source:"@site/docs/Engineering/FrontEnd/ComponentsSection/Form/PickerList.mdx",sourceDirName:"Engineering/FrontEnd/ComponentsSection/Form",slug:"/Engineering/FrontEnd/ComponentsSection/Form/PickerList",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/ComponentsSection/Form/PickerList",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"FormWrapper",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/ComponentsSection/Form/FormWrapper"},next:{title:"RadioGroup",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/ComponentsSection/Form/RadioGroup"}},p=[],u="<PickerList items={pickerListItems} />",d={toc:p,exampleString:u};function E(e){var t=e.components,n=(0,i.Z)(e,s);return(0,r.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(l.Z,{componentName:"PickerList",example:u,codeString:"import { useTranslation } from 'react-i18next'\nimport React, { FC } from 'react'\n\nimport { ButtonDecoratorType, List, ListItemObj, VAIconProps } from 'components'\nimport { NAMESPACE } from 'constants/namespaces'\nimport { TextLine } from 'components/types'\nimport { TextLineWithIconProps } from 'components/TextLineWithIcon'\nimport { TextLines } from 'components/TextLines'\n\n/**\n * Signifies each item in the list of items in {@link PickerListProps}\n */\nexport type PickerListItemObj = {\n  /** lines of text to display */\n  text: string\n  /** whether this item is the selected value **/\n  isSelected: boolean\n  /** icon to show */\n  icon?: VAIconProps\n} & Partial<ListItemObj>\n\n/**\n * Props for {@link PickerList}\n */\nexport type PickerListProps = {\n  /** list of items of which a button will be rendered per item */\n  items: Array<PickerListItemObj>\n  /** optional title to use for the list */\n  title?: string\n  /**optional a11y hint for the title */\n  titleA11yLabel?: string\n}\n\n/**\n * Display a list of buttons with text and optional actions\n */\nconst PickerList: FC<PickerListProps> = ({ items, title, titleA11yLabel }) => {\n  const { t } = useTranslation(NAMESPACE.COMMON)\n\n  const listItemObjs: Array<ListItemObj> = items.map((item: PickerListItemObj, index) => {\n    // Move all of the properties except text lines to the standard list item object\n    const { text, icon, testId, isSelected, ...listItemObj } = item\n\n    const textLine = icon ? [{ text, iconProps: icon, color: icon.fill } as TextLineWithIconProps] : [{ text } as TextLine]\n    const content = <TextLines listOfText={textLine} />\n\n    const backgroundColor = isSelected ? 'pickerSelectedItem' : 'list'\n    const decorator = isSelected ? ButtonDecoratorType.SelectedItem : ButtonDecoratorType.None\n\n    const defaultTestId = text ? text : t('picker.noSelection')\n    const testIdToUse = testId ? testId : defaultTestId\n\n    const a11yValue = t('listPosition', { position: index + 1, total: items.length })\n    const a11yState = {\n      selected: isSelected,\n    }\n\n    return { ...listItemObj, content, backgroundColor, decorator, testId: testIdToUse, a11yValue, a11yRole: 'menuitem', a11yState }\n  })\n\n  return <List items={listItemObjs} title={title} titleA11yLabel={titleA11yLabel} />\n}\n\nexport default PickerList\n",mdxType:"ComponentTopInfo"}))}E.isMDXComponent=!0}}]);