"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6097],{38909:function(e,t,n){n.d(t,{Z:function(){return m}});var o=n(67294),i=n(19055),r=n(26396),l=n(58215),c=n(82224),a=n(36005),s=function(e){var t=e.props;return t?o.createElement(o.Fragment,null,a.ZP.isEmpty(t)?o.createElement("pre",{className:"preText"},"This component does not have props defined"):o.createElement("table",null,o.createElement("thead",null,o.createElement("tr",null,o.createElement("th",null,"Name"),o.createElement("th",null,"Type"),o.createElement("th",null,"Default Value"),o.createElement("th",null,"Required"),o.createElement("th",null,"Description"))),o.createElement("tbody",null,Object.keys(t).map((function(e){var n;return o.createElement("tr",{key:e},o.createElement("td",null,o.createElement("code",null,e)),o.createElement("td",{style:{minWidth:200}},null==(n=t[e].type)?void 0:n.name),o.createElement("td",null,t[e].defaultValue&&t[e].defaultValue.value.toString()),o.createElement("td",null,t[e].required?"Yes":"No"),o.createElement("td",null,t[e].description))}))))):null};function m(e){var t=(0,c.N)(e.componentName)[0],n=t.description,a=t.displayName,m=t.props,p="How to use the "+a+" component",u="Full code for the "+a+" component";return o.createElement(o.Fragment,null,n,o.createElement("br",null),o.createElement("br",null),o.createElement(r.Z,null,o.createElement(l.Z,{value:"props",label:"Properties"},o.createElement(s,{props:m})),o.createElement(l.Z,{value:"example",label:"Example"},e.example&&o.createElement(i.Z,{title:p,className:"language-tsx test"},e.example)),o.createElement(l.Z,{value:"code",label:"Source Code"},e.codeString&&o.createElement(i.Z,{title:u,className:"language-tsx"},e.codeString)),o.createElement(l.Z,{value:"accessibility",label:"Accessibility"},o.createElement("pre",{className:"preText"},e.accessibilityInfo))))}},82224:function(e,t,n){n.d(t,{N:function(){return i}});var o=n(28084),i=function(e){return(0,o.default)()["docusaurus-plugin-react-docgen-typescript"].default.filter((function(t){return t.displayName===e}))}},19041:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return s},default:function(){return d},exampleString:function(){return u},frontMatter:function(){return a},metadata:function(){return m},toc:function(){return p}});var o=n(87462),i=n(63366),r=(n(67294),n(3905)),l=(n(19055),n(38909)),c=["components"],a={},s=void 0,m={unversionedId:"UX/ComponentsSection/TextViews/TextLineWithIcon",id:"UX/ComponentsSection/TextViews/TextLineWithIcon",title:"TextLineWithIcon",description:"export const exampleString = `{textLinesWithIcon?.map((textObj number) => {",source:"@site/docs/UX/ComponentsSection/TextViews/TextLineWithIcon.mdx",sourceDirName:"UX/ComponentsSection/TextViews",slug:"/UX/ComponentsSection/TextViews/TextLineWithIcon",permalink:"/va-mobile-app/docs/UX/ComponentsSection/TextViews/TextLineWithIcon",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"TextArea",permalink:"/va-mobile-app/docs/UX/ComponentsSection/TextViews/TextArea"},next:{title:"TextLines",permalink:"/va-mobile-app/docs/UX/ComponentsSection/TextViews/TextLines"}},p=[],u="{textLinesWithIcon?.map((textObj: TextLineWithIconProps, index: number) => {\n    return <TextLineWithIcon key={index} {...textObj} />\n})}",x={toc:p,exampleString:u};function d(e){var t=e.components,n=(0,i.Z)(e,c);return(0,r.kt)("wrapper",(0,o.Z)({},x,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(l.Z,{componentName:"TextLineWithIcon",example:u,codeString:"import React, { FC } from 'react'\n\nimport { TextLine } from './types'\nimport { useTheme } from 'utils/hooks'\nimport Box from './Box'\nimport TextView from './TextView'\nimport VAIcon, { VAIconProps } from './VAIcon'\n\nexport type TextLineWithIconProps = {\n  /** Props for icon you want to display in this line of text */\n  iconProps?: VAIconProps & {\n    /** If the icon is supposed to appear on its own line (ex: read tag) */\n    isOwnLine?: boolean\n  }\n} & TextLine\n\n/**Common component to show an icon with a line of text*/\nexport const TextLineWithIcon: FC<TextLineWithIconProps> = ({ iconProps, text, variant, textAlign, color }) => {\n  const themes = useTheme()\n  const iconNotOwnRow = !(iconProps && iconProps.isOwnLine)\n\n  return (\n    <Box flexDirection={'row'} alignItems={'center'}>\n      <Box ml={iconNotOwnRow ? 0 : themes.dimensions.listItemDecoratorMarginLeft} mr={themes.dimensions.condensedMarginBetween}>\n        {iconProps && <VAIcon name={iconProps.name} width={iconProps.width} height={iconProps.height} fill={iconProps.fill} />}\n        {!iconProps && <Box mr={16} />}\n      </Box>\n      {iconNotOwnRow && (\n        <TextView flex={1} variant={variant} textAlign={textAlign} color={color}>\n          {text}\n        </TextView>\n      )}\n    </Box>\n  )\n}\n\nexport default TextLineWithIcon\n",mdxType:"ComponentTopInfo"}))}d.isMDXComponent=!0}}]);