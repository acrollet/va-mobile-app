"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5963],{38909:(e,t,n)=>{n.d(t,{Z:()=>p});var o=n(67294),r=n(19055),l=n(26396),a=n(58215),c=n(82224),i=n(36005);const s=e=>{let{props:t}=e;return t?o.createElement(o.Fragment,null,i.ZP.isEmpty(t)?o.createElement("pre",{className:"preText"},"This component does not have props defined"):o.createElement("table",null,o.createElement("thead",null,o.createElement("tr",null,o.createElement("th",null,"Name"),o.createElement("th",null,"Type"),o.createElement("th",null,"Default Value"),o.createElement("th",null,"Required"),o.createElement("th",null,"Description"))),o.createElement("tbody",null,Object.keys(t).map((e=>o.createElement("tr",{key:e},o.createElement("td",null,o.createElement("code",null,e)),o.createElement("td",{style:{minWidth:200}},t[e].type?.name),o.createElement("td",null,t[e].defaultValue&&t[e].defaultValue.value.toString()),o.createElement("td",null,t[e].required?"Yes":"No"),o.createElement("td",null,t[e].description))))))):null};function p(e){const t=(0,c.N)(e.componentName),{description:n,displayName:i,props:p}=t[0],m=`How to use the ${i} component`,d=`Full code for the ${i} component`;return o.createElement(o.Fragment,null,n,o.createElement("br",null),o.createElement("br",null),o.createElement(l.Z,null,o.createElement(a.Z,{value:"props",label:"Properties"},o.createElement(s,{props:p})),o.createElement(a.Z,{value:"example",label:"Example"},e.example&&o.createElement(r.Z,{title:m,className:"language-tsx test"},e.example)),o.createElement(a.Z,{value:"code",label:"Source Code"},e.codeString&&o.createElement(r.Z,{title:d,className:"language-tsx"},e.codeString)),o.createElement(a.Z,{value:"accessibility",label:"Accessibility"},o.createElement("pre",{className:"preText"},e.accessibilityInfo))))}},82224:(e,t,n)=>{n.d(t,{N:()=>r});var o=n(28084);const r=e=>(0,o.default)()["docusaurus-plugin-react-docgen-typescript"].default.filter((t=>t.displayName===e))},32393:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>i,default:()=>g,exampleString:()=>m,frontMatter:()=>c,metadata:()=>s,toc:()=>p});var o=n(87462),r=(n(67294),n(3905));n(95657),n(19055);const l="import { ScrollView, ScrollViewProps, ViewStyle } from 'react-native'\nimport React, { FC, Ref } from 'react'\n\nimport { VABackgroundColors } from 'styles/theme'\n\nimport { useSafeAreaInsets } from 'react-native-safe-area-context'\nimport { useTheme } from '../utils/hooks'\n\nexport type VAScrollViewProps = {\n  /** Optional reference prop to determine scroll position */\n  scrollViewRef?: Ref<ScrollView>\n  /** optional background color to override the main background */\n  backgroundColor?: keyof VABackgroundColors\n  /** remove insets */\n  removeInsets?: boolean\n} & ScrollViewProps\n\n/**A common component that provides a scrollable view. Use this instead of ScrollView. This component is a wrapper for react-native ScrollView that has a scrollbar styling fix */\nconst VAScrollView: FC<VAScrollViewProps> = (props) => {\n  const insets = useSafeAreaInsets()\n  const theme = useTheme()\n\n  const style = {\n    paddingRight: props.removeInsets ? undefined : insets.right,\n    paddingLeft: props.removeInsets ? undefined : insets.left,\n    backgroundColor: props.backgroundColor ? theme.colors.background[props.backgroundColor as keyof VABackgroundColors] : theme.colors.background.main,\n  }\n\n  // Grow container so short children like loading indicators are vertically centered\n  const contentContainerStyle: ViewStyle = { flexGrow: 1 }\n\n  return (\n    /**\n     * force scroll position by default to avoid visual bug where scrollbar appears in the center of a screen\n     * scrollIndicatorInsets is an iOS only prop, this bug only appears on iOS\n     */\n    <ScrollView ref={props.scrollViewRef} scrollIndicatorInsets={{ right: 1 }} contentContainerStyle={contentContainerStyle} {...props} style={style} />\n  )\n}\n\nexport default VAScrollView\n";var a=n(38909);const c={},i=void 0,s={unversionedId:"UX/ComponentsSection/Uncategorized/VAScrollView",id:"UX/ComponentsSection/Uncategorized/VAScrollView",title:"VAScrollView",description:"export const exampleString = `return (",source:"@site/docs/UX/ComponentsSection/Uncategorized/VAScrollView.mdx",sourceDirName:"UX/ComponentsSection/Uncategorized",slug:"/UX/ComponentsSection/Uncategorized/VAScrollView",permalink:"/va-mobile-app/docs/UX/ComponentsSection/Uncategorized/VAScrollView",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"VAImage",permalink:"/va-mobile-app/docs/UX/ComponentsSection/Uncategorized/VAImage"},next:{title:"Templates",permalink:"/va-mobile-app/docs/UX/Templates/"}},p=[],m="return (\n    <VAScrollView>\n        <Box />\n    </VAScrollView>\n)",d={toc:p,exampleString:m},u="wrapper";function g(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(a.Z,{componentName:"VAScrollView",example:m,codeString:l,mdxType:"ComponentTopInfo"}))}g.isMDXComponent=!0}}]);