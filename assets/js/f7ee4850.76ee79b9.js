"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3337],{38909:function(e,t,n){n.d(t,{Z:function(){return u}});var o=n(67294),l=n(19055),i=n(26396),r=n(58215),a=n(82224),s=n(36005),c=function(e){var t=e.props;return t?o.createElement(o.Fragment,null,s.ZP.isEmpty(t)?o.createElement("pre",{className:"preText"},"This component does not have props defined"):o.createElement("table",null,o.createElement("thead",null,o.createElement("tr",null,o.createElement("th",null,"Name"),o.createElement("th",null,"Type"),o.createElement("th",null,"Default Value"),o.createElement("th",null,"Required"),o.createElement("th",null,"Description"))),o.createElement("tbody",null,Object.keys(t).map((function(e){var n;return o.createElement("tr",{key:e},o.createElement("td",null,o.createElement("code",null,e)),o.createElement("td",{style:{minWidth:200}},null==(n=t[e].type)?void 0:n.name),o.createElement("td",null,t[e].defaultValue&&t[e].defaultValue.value.toString()),o.createElement("td",null,t[e].required?"Yes":"No"),o.createElement("td",null,t[e].description))}))))):null};function u(e){var t=(0,a.N)(e.componentName)[0],n=t.description,s=t.displayName,u=t.props,m="How to use the "+s+" component",p="Full code for the "+s+" component";return o.createElement(o.Fragment,null,n,o.createElement("br",null),o.createElement("br",null),o.createElement(i.Z,null,o.createElement(r.Z,{value:"props",label:"Properties"},o.createElement(c,{props:u})),o.createElement(r.Z,{value:"example",label:"Example"},e.example&&o.createElement(l.Z,{title:m,className:"language-tsx test"},e.example)),o.createElement(r.Z,{value:"code",label:"Source Code"},e.codeString&&o.createElement(l.Z,{title:p,className:"language-tsx"},e.codeString)),o.createElement(r.Z,{value:"accessibility",label:"Accessibility"},o.createElement("pre",{className:"preText"},e.accessibilityInfo))))}},82224:function(e,t,n){n.d(t,{N:function(){return l}});var o=n(28084),l=function(e){return(0,o.default)()["docusaurus-plugin-react-docgen-typescript"].default.filter((function(t){return t.displayName===e}))}},29821:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return m},toc:function(){return p},exampleString:function(){return d},default:function(){return b}});var o=n(87462),l=n(63366),i=(n(67294),n(3905)),r=(n(19055),n(2809)),a=n(38909),s=["components"],c={},u=void 0,m={unversionedId:"UX/ComponentsSection/Buttons and Links/AttachmentLink",id:"UX/ComponentsSection/Buttons and Links/AttachmentLink",title:"AttachmentLink",description:"export const exampleString = `<AttachmentLink",source:"@site/docs/UX/ComponentsSection/Buttons and Links/AttachmentLink.mdx",sourceDirName:"UX/ComponentsSection/Buttons and Links",slug:"/UX/ComponentsSection/Buttons and Links/AttachmentLink",permalink:"/va-mobile-app/docs/UX/ComponentsSection/Buttons and Links/AttachmentLink",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"MessageAlert",permalink:"/va-mobile-app/docs/UX/ComponentsSection/Alerts and Progress/MessageAlert"},next:{title:"BackButton",permalink:"/va-mobile-app/docs/UX/ComponentsSection/Buttons and Links/BackButton"}},p=[],d="<AttachmentLink\nname={'filename'}\nformattedSize={'byteSize'}\na11yHint={'a11yHint'}\na11yValue={'a11yValue'}\nonPress={() => {console.log('press function')}}\nload={true}\n/>",f={toc:p,exampleString:d};function b(e){var t=e.components,n=(0,l.Z)(e,s);return(0,i.kt)("wrapper",(0,o.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)(a.Z,{componentName:"AttachmentLink",example:d,codeString:r.Z,mdxType:"ComponentTopInfo"}))}b.isMDXComponent=!0},2809:function(e,t){t.Z="import { AccessibilityRole, View } from 'react-native'\nimport { useFocusEffect } from '@react-navigation/native'\nimport React, { FC } from 'react'\n\nimport { Box, BoxProps, TextView } from './index'\nimport { VABorderColors } from 'styles/theme'\nimport { useAccessibilityFocus, useTheme } from 'utils/hooks'\n\nexport type AlertBoxProps = {\n  /** color of the border */\n  border: keyof VABorderColors\n  /** body of the alert */\n  text?: string\n  /** optional bolded title text */\n  title?: string\n  /** optional accessibility label for the text */\n  textA11yLabel?: string\n  /** optional accessibility label for the title */\n  titleA11yLabel?: string\n  /** optional accessibility role for the title */\n  titleRole?: AccessibilityRole\n}\n\n/**\n * Displays content in a box styled as an alert\n */\nconst AlertBox: FC<AlertBoxProps> = ({ border, children, title, text, textA11yLabel, titleA11yLabel, titleRole }) => {\n  const theme = useTheme()\n  const [titleFocusRef, setTitleFocus] = useAccessibilityFocus<View>()\n  const [textFocusRef, setTextFocus] = useAccessibilityFocus<View>()\n\n  const focusOnAlert = border === 'error' && (title || text)\n  useFocusEffect(focusOnAlert && title ? setTitleFocus : setTextFocus)\n\n  const boxProps: BoxProps = {\n    backgroundColor: 'alertBox',\n    borderLeftWidth: theme.dimensions.alertBorderWidth,\n    borderLeftColor: border,\n    py: 20,\n    px: 20,\n  }\n\n  const titleAccessibilityRole = titleRole ? titleRole : text || children ? 'header' : undefined\n\n  return (\n    <Box {...boxProps}>\n      {!!title && (\n        <View ref={titleFocusRef} accessible={true} accessibilityLabel={titleA11yLabel || title} accessibilityRole={titleAccessibilityRole}>\n          <TextView variant=\"MobileBodyBold\" mb={text ? theme.dimensions.standardMarginBetween : 0}>\n            {title}\n          </TextView>\n        </View>\n      )}\n      {!!text && (\n        <View ref={textFocusRef} accessible={true} accessibilityLabel={textA11yLabel || text}>\n          <TextView variant=\"MobileBody\">{text}</TextView>\n        </View>\n      )}\n      {children}\n    </Box>\n  )\n}\n\nexport default AlertBox\n"}}]);