"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8817],{38909:function(e,n,t){t.d(n,{Z:function(){return c}});var o=t(67294),r=t(19055),i=t(26396),l=t(58215),a=t(82224),s=t(36005),m=function(e){var n=e.props;return n?o.createElement(o.Fragment,null,s.ZP.isEmpty(n)?o.createElement("pre",{className:"preText"},"This component does not have props defined"):o.createElement("table",null,o.createElement("thead",null,o.createElement("tr",null,o.createElement("th",null,"Name"),o.createElement("th",null,"Type"),o.createElement("th",null,"Default Value"),o.createElement("th",null,"Required"),o.createElement("th",null,"Description"))),o.createElement("tbody",null,Object.keys(n).map((function(e){var t;return o.createElement("tr",{key:e},o.createElement("td",null,o.createElement("code",null,e)),o.createElement("td",{style:{minWidth:200}},null==(t=n[e].type)?void 0:t.name),o.createElement("td",null,n[e].defaultValue&&n[e].defaultValue.value.toString()),o.createElement("td",null,n[e].required?"Yes":"No"),o.createElement("td",null,n[e].description))}))))):null};function c(e){var n=(0,a.N)(e.componentName)[0],t=n.description,s=n.displayName,c=n.props,p="How to use the "+s+" component",u="Full code for the "+s+" component";return o.createElement(o.Fragment,null,t,o.createElement("br",null),o.createElement("br",null),o.createElement(i.Z,null,o.createElement(l.Z,{value:"props",label:"Properties"},o.createElement(m,{props:c})),o.createElement(l.Z,{value:"example",label:"Example"},e.example&&o.createElement(r.Z,{title:p,className:"language-tsx test"},e.example)),o.createElement(l.Z,{value:"code",label:"Source Code"},e.codeString&&o.createElement(r.Z,{title:u,className:"language-tsx"},e.codeString)),o.createElement(l.Z,{value:"accessibility",label:"Accessibility"},o.createElement("pre",{className:"preText"},e.accessibilityInfo))))}},26042:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return m},default:function(){return g},exampleString:function(){return u},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return p}});var o=t(87462),r=t(63366),i=(t(67294),t(3905)),l=(t(19055),t(38909)),a=["components"],s={},m=void 0,c={unversionedId:"Engineering/FrontEnd/ComponentsSection/LoadingComponent",id:"Engineering/FrontEnd/ComponentsSection/LoadingComponent",title:"LoadingComponent",description:"",source:"@site/docs/Engineering/FrontEnd/ComponentsSection/LoadingComponent.mdx",sourceDirName:"Engineering/FrontEnd/ComponentsSection",slug:"/Engineering/FrontEnd/ComponentsSection/LoadingComponent",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/ComponentsSection/LoadingComponent",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"List",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/ComponentsSection/List"},next:{title:"MessageAlert",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/ComponentsSection/MessageAlert"}},p=[],u="<LoadingComponent text={'secureMessaging.formMessage.saveDraft.loading'} />",d={toc:p,exampleString:u};function g(e){var n=e.components,t=(0,r.Z)(e,a);return(0,i.kt)("wrapper",(0,o.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)(l.Z,{componentName:"LoadingComponent",example:u,codeString:"import { ViewStyle } from 'react-native'\nimport LottieView from 'lottie-react-native'\nimport React, { FC } from 'react'\n\nimport { Box, TextView, VAScrollView } from 'components'\nimport { useTheme } from 'utils/hooks'\n\nexport type LoadingComponentProps = {\n  /**Text to be shown under the spinner */\n  text?: string\n  /** show only the spinner without the text */\n  justSpinner?: boolean\n  /** spinner height*/\n  spinnerHeight?: number\n  /** spinner width */\n  spinnerWidth?: number\n}\n\n/**A common component to show a loading spinner */\nconst LoadingComponent: FC<LoadingComponentProps> = ({ text, justSpinner, spinnerHeight, spinnerWidth }) => {\n  const theme = useTheme()\n\n  const scrollStyles: ViewStyle = {\n    flexGrow: 1,\n    justifyContent: 'center',\n  }\n\n  const spinnerStyle: ViewStyle = {\n    height: spinnerHeight || 50,\n    width: spinnerWidth || 50,\n    alignContent: 'center',\n  }\n\n  const getSpinner = () => {\n    return <LottieView source={require('./va-spinner.json')} autoPlay loop style={spinnerStyle} speed={0.8} />\n  }\n\n  return (\n    <>\n      {justSpinner ? (\n        <Box alignItems=\"center\" justifyContent=\"center\">\n          {getSpinner()}\n        </Box>\n      ) : (\n        <VAScrollView contentContainerStyle={scrollStyles}>\n          <Box justifyContent=\"center\" mx={theme.dimensions.gutter} mt={theme.dimensions.contentMarginTop} mb={theme.dimensions.contentMarginBottom} alignItems={'center'}>\n            {getSpinner()}\n            <Box mt={theme.dimensions.condensedMarginBetween}>\n              <TextView textAlign={'center'} variant=\"MobileBody\">\n                {text}\n              </TextView>\n            </Box>\n          </Box>\n        </VAScrollView>\n      )}\n    </>\n  )\n}\n\nexport default LoadingComponent\n",mdxType:"ComponentTopInfo"}))}g.isMDXComponent=!0}}]);