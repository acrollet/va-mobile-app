"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7814],{38909:(e,t,n)=>{n.d(t,{Z:()=>m});var o=n(67294),l=n(19055),a=n(26396),c=n(58215),r=n(82224),i=n(36005);const s=e=>{let{props:t}=e;return t?o.createElement(o.Fragment,null,i.ZP.isEmpty(t)?o.createElement("pre",{className:"preText"},"This component does not have props defined"):o.createElement("table",null,o.createElement("thead",null,o.createElement("tr",null,o.createElement("th",null,"Name"),o.createElement("th",null,"Type"),o.createElement("th",null,"Default Value"),o.createElement("th",null,"Required"),o.createElement("th",null,"Description"))),o.createElement("tbody",null,Object.keys(t).map((e=>o.createElement("tr",{key:e},o.createElement("td",null,o.createElement("code",null,e)),o.createElement("td",{style:{minWidth:200}},t[e].type?.name),o.createElement("td",null,t[e].defaultValue&&t[e].defaultValue.value.toString()),o.createElement("td",null,t[e].required?"Yes":"No"),o.createElement("td",null,t[e].description))))))):null};function m(e){const t=(0,r.N)(e.componentName),{description:n,displayName:i,props:m}=t[0],p=`How to use the ${i} component`,u=`Full code for the ${i} component`;return o.createElement(o.Fragment,null,n,o.createElement("br",null),o.createElement("br",null),o.createElement(a.Z,null,o.createElement(c.Z,{value:"props",label:"Properties"},o.createElement(s,{props:m})),o.createElement(c.Z,{value:"example",label:"Example"},e.example&&o.createElement(l.Z,{title:p,className:"language-tsx test"},e.example)),o.createElement(c.Z,{value:"code",label:"Source Code"},e.codeString&&o.createElement(l.Z,{title:u,className:"language-tsx"},e.codeString)),o.createElement(c.Z,{value:"accessibility",label:"Accessibility"},o.createElement("pre",{className:"preText"},e.accessibilityInfo))))}},82224:(e,t,n)=>{n.d(t,{N:()=>l});var o=n(28084);const l=e=>(0,o.default)()["docusaurus-plugin-react-docgen-typescript"].default.filter((t=>t.displayName===e))},23560:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>i,default:()=>h,exampleString:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>m});var o=n(87462),l=(n(67294),n(3905));n(95657),n(19055);const a="import { AccessibilityProps, Switch as RNSwitch } from 'react-native'\nimport React, { FC } from 'react'\n\nimport { a11yHintProp } from 'utils/accessibility'\nimport { useTheme } from 'utils/hooks'\nimport styled from 'styled-components'\n\nconst StyledRNSwitch = styled(RNSwitch)`\n  shadow-opacity: 0.3;\n  shadow-radius: 1px;\n  shadow-offset: 0px 0.5px;\n  min-width: 51px;\n`\n/**\n * Signifies props passed into {@link Switch}\n */\nexport type SwitchProps = AccessibilityProps & {\n  /** callback called on value change of the switch */\n  onPress: (value: boolean) => void\n  /** optional value of switch, updated with onPress */\n  on?: boolean\n  /** optional testID of switch */\n  testID?: string\n  /** optional accessibilityHint */\n  a11yHint?: string\n}\n\n/**A common component for the react native switch component*/\nconst Switch: FC<SwitchProps> = (props) => {\n  const { onPress, on, testID, a11yHint } = props\n  const theme = useTheme()\n  return (\n    <StyledRNSwitch\n      trackColor={{ false: theme.colors.control.switchOffTrack, true: theme.colors.control.switchOnTrack }}\n      thumbColor={theme.colors.control.switchOnThumb}\n      onValueChange={onPress}\n      value={!!on}\n      testID={testID}\n      {...a11yHintProp(a11yHint || '')}\n    />\n  )\n}\n\nexport default Switch\n";var c=n(38909);const r={},i=void 0,s={unversionedId:"UX/ComponentsSection/Selection and Input/Form Elements/Switch",id:"UX/ComponentsSection/Selection and Input/Form Elements/Switch",title:"Switch",description:"",source:"@site/docs/UX/ComponentsSection/Selection and Input/Form Elements/Switch.mdx",sourceDirName:"UX/ComponentsSection/Selection and Input/Form Elements",slug:"/UX/ComponentsSection/Selection and Input/Form Elements/Switch",permalink:"/va-mobile-app/docs/UX/ComponentsSection/Selection and Input/Form Elements/Switch",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"RadioGroup",permalink:"/va-mobile-app/docs/UX/ComponentsSection/Selection and Input/Form Elements/RadioGroup"},next:{title:"VASelector",permalink:"/va-mobile-app/docs/UX/ComponentsSection/Selection and Input/Form Elements/VASelector"}},m=[],p="<Switch onPress={() => { console.log('update on press') }} on={false} />",u={toc:m,exampleString:p},d="wrapper";function h(e){let{components:t,...n}=e;return(0,l.kt)(d,(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(c.Z,{componentName:"Switch",example:p,codeString:a,mdxType:"ComponentTopInfo"}))}h.isMDXComponent=!0}}]);