"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[9232],{38909:function(e,t,n){n.d(t,{Z:function(){return m}});var o=n(67294),a=n(19055),r=n(26396),l=n(58215),i=n(82224),c=n(36005),s=function(e){var t=e.props;return t?o.createElement(o.Fragment,null,c.ZP.isEmpty(t)?o.createElement("pre",{className:"preText"},"This component does not have props defined"):o.createElement("table",null,o.createElement("thead",null,o.createElement("tr",null,o.createElement("th",null,"Name"),o.createElement("th",null,"Type"),o.createElement("th",null,"Default Value"),o.createElement("th",null,"Required"),o.createElement("th",null,"Description"))),o.createElement("tbody",null,Object.keys(t).map((function(e){var n;return o.createElement("tr",{key:e},o.createElement("td",null,o.createElement("code",null,e)),o.createElement("td",{style:{minWidth:200}},null==(n=t[e].type)?void 0:n.name),o.createElement("td",null,t[e].defaultValue&&t[e].defaultValue.value.toString()),o.createElement("td",null,t[e].required?"Yes":"No"),o.createElement("td",null,t[e].description))}))))):null};function m(e){var t=(0,i.N)(e.componentName)[0],n=t.description,c=t.displayName,m=t.props,u="How to use the "+c+" component",p="Full code for the "+c+" component";return o.createElement(o.Fragment,null,n,o.createElement("br",null),o.createElement("br",null),o.createElement(r.Z,null,o.createElement(l.Z,{value:"props",label:"Properties"},o.createElement(s,{props:m})),o.createElement(l.Z,{value:"example",label:"Example"},e.example&&o.createElement(a.Z,{title:u,className:"language-tsx test"},e.example)),o.createElement(l.Z,{value:"code",label:"Source Code"},e.codeString&&o.createElement(a.Z,{title:p,className:"language-tsx"},e.codeString)),o.createElement(l.Z,{value:"accessibility",label:"Accessibility"},o.createElement("pre",{className:"preText"},e.accessibilityInfo))))}},32979:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return s},default:function(){return g},exampleString:function(){return p},frontMatter:function(){return c},metadata:function(){return m},toc:function(){return u}});var o=n(87462),a=n(63366),r=(n(67294),n(3905)),l=(n(19055),n(38909)),i=["components"],c={},s=void 0,m={unversionedId:"Engineering/FrontEnd/ComponentsSection/LabelTag",id:"Engineering/FrontEnd/ComponentsSection/LabelTag",title:"LabelTag",description:"",source:"@site/docs/Engineering/FrontEnd/ComponentsSection/LabelTag.mdx",sourceDirName:"Engineering/FrontEnd/ComponentsSection",slug:"/Engineering/FrontEnd/ComponentsSection/LabelTag",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/ComponentsSection/LabelTag",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"HeaderTitle",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/ComponentsSection/HeaderTitle"},next:{title:"LargeNavButton",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/ComponentsSection/LargeNavButton"}},u=[],p="<LabelTag text={'value'} />",d={toc:u,exampleString:p};function g(e){var t=e.components,n=(0,a.Z)(e,i);return(0,r.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(l.Z,{componentName:"LabelTag",example:p,codeString:"import { testIdProps } from 'utils/accessibility'\nimport { useTheme } from 'utils/hooks'\nimport Box, { BackgroundVariant } from './Box'\nimport React, { FC } from 'react'\nimport TextView, { ColorVariant, FontVariant } from './TextView'\n\nexport type MessagesSentTagProps = {\n  /**Message to be shown on the tag*/\n  text: string\n  /** optional background color for tag */\n  backgroundColor?: BackgroundVariant\n  /** optional text color for tag */\n  color?: ColorVariant\n  /** optional variant for tag text */\n  variant?: FontVariant\n}\n\n/**Common component to show a text inside of a tag*/\nconst LabelTag: FC<MessagesSentTagProps> = ({ text, backgroundColor, color, variant }) => {\n  const theme = useTheme()\n  return (\n    <Box\n      minWidth={theme.dimensions.tagMinWidth}\n      justifyContent={'center'}\n      alignSelf={'flex-start'}\n      backgroundColor={backgroundColor || 'unreadMessagesTag'}\n      borderRadius={3}\n      {...testIdProps(text)}\n      accessible={true}>\n      <TextView flexWrap={'wrap'} color={color || 'primaryContrast'} variant={variant || 'LabelTag'} px={12} py={4}>\n        {text}\n      </TextView>\n    </Box>\n  )\n}\n\nexport default LabelTag\n",mdxType:"ComponentTopInfo"}))}g.isMDXComponent=!0}}]);