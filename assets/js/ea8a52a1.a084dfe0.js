"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[9899],{77800:(e,t,n)=>{n.d(t,{Z:()=>c});var a=n(67294),s=n(19055),o=n(26396),r=n(58215),l=n(82224),m=n(36005);const i=e=>{let{props:t}=e;return t?a.createElement(a.Fragment,null,m.ZP.isEmpty(t)?a.createElement("pre",{className:"preText"},"This component does not have param defined"):a.createElement("table",null,a.createElement("thead",null,a.createElement("tr",null,a.createElement("th",null,"Param / Return"),a.createElement("th",null,"Description"))),a.createElement("tbody",null,Object.keys(t).map((e=>a.createElement("tr",{key:e},a.createElement("td",null,a.createElement("code",null,e)),a.createElement("td",null,"param"===e?t[e].split("\n").map(((e,t)=>{let n=e.split("-");return a.createElement("div",{key:t},a.createElement("code",null,n[0].trim()+":"),"\ufeff"+n[1])})):t[e]))))))):null};function c(e){const t=(0,l.N)(e.componentName),{description:n,displayName:m,tags:c}=t[0],d=`How to use the ${m} component`;return a.createElement(a.Fragment,null,a.createElement(o.Z,null,a.createElement(r.Z,{value:"description",label:"Description"},a.createElement("pre",{className:"preText"},n)),a.createElement(r.Z,{value:"params",label:"Params and Return"},a.createElement(i,{props:c})),a.createElement(r.Z,{value:"example",label:"Example"},e.example&&a.createElement(s.Z,{title:d,className:"language-tsx test"},e.example))))}},82224:(e,t,n)=>{n.d(t,{N:()=>s});var a=n(28084);const s=e=>(0,a.default)()["docusaurus-plugin-react-docgen-typescript"].default.filter((t=>t.displayName===e))},99122:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>l,default:()=>p,exampleString:()=>c,frontMatter:()=>r,metadata:()=>m,toc:()=>i});var a=n(87462),s=(n(67294),n(3905)),o=(n(95657),n(77800));const r={},l=void 0,m={unversionedId:"Engineering/FrontEnd/CustomHooks/useAttachments",id:"Engineering/FrontEnd/CustomHooks/useAttachments",title:"useAttachments",description:"export const exampleString = `const [attachmentsList, addAttachment, removeAttachment] = useAttachments()\\n",source:"@site/docs/Engineering/FrontEnd/CustomHooks/useAttachments.mdx",sourceDirName:"Engineering/FrontEnd/CustomHooks",slug:"/Engineering/FrontEnd/CustomHooks/useAttachments",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/CustomHooks/useAttachments",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"useAccessibilityFocus",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/CustomHooks/useAccessibilityFocus"},next:{title:"useAutoScrollToElement",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/CustomHooks/useAutoScrollToElement"}},i=[],c="const [attachmentsList, addAttachment, removeAttachment] = useAttachments()\n\n useEffect(() => {\n    // if a file was just added, update attachmentsList and clear the route params for attachmentFileToAdd\n    if (!_.isEmpty(attachmentFileToAdd) && !attachmentsList.includes(attachmentFileToAdd)) {\n      addAttachment(attachmentFileToAdd)\n      navigation.setParams({ attachmentFileToAdd: {} })\n    }\n  }, [attachmentFileToAdd, attachmentsList, addAttachment, navigation])\n\n{\n    fieldType: FieldType.FormAttachmentsList,\n    fieldProps: {\n    originHeader: t('secureMessaging.drafts.edit'),\n    removeOnPress: removeAttachment,\n    largeButtonProps:\n        attachmentsList.length < theme.dimensions.maxNumMessageAttachments\n        ? {\n            label: t('secureMessaging.formMessage.addFiles'),\n            a11yHint: t('secureMessaging.formMessage.addFiles.a11yHint'),\n            onPress: onAddFiles,\n            }\n        : undefined,\n    attachmentsList,\n    a11yHint: t('secureMessaging.attachments.howToAttachAFile.a11y'),\n},",d={toc:i,exampleString:c},u="wrapper";function p(e){let{components:t,...n}=e;return(0,s.kt)(u,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)(o.Z,{componentName:"useAttachments",example:c,mdxType:"HooksInfo"}))}p.isMDXComponent=!0}}]);