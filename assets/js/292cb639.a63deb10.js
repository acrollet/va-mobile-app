"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3126],{38909:function(e,n,t){t.d(n,{Z:function(){return u}});var i=t(67294),r=t(19055),o=t(26396),a=t(58215),s=t(82224),l=t(36005),c=function(e){var n=e.props;return n?i.createElement(i.Fragment,null,l.ZP.isEmpty(n)?i.createElement("pre",{className:"preText"},"This component does not have props defined"):i.createElement("table",null,i.createElement("thead",null,i.createElement("tr",null,i.createElement("th",null,"Name"),i.createElement("th",null,"Type"),i.createElement("th",null,"Default Value"),i.createElement("th",null,"Required"),i.createElement("th",null,"Description"))),i.createElement("tbody",null,Object.keys(n).map((function(e){var t;return i.createElement("tr",{key:e},i.createElement("td",null,i.createElement("code",null,e)),i.createElement("td",{style:{minWidth:200}},null==(t=n[e].type)?void 0:t.name),i.createElement("td",null,n[e].defaultValue&&n[e].defaultValue.value.toString()),i.createElement("td",null,n[e].required?"Yes":"No"),i.createElement("td",null,n[e].description))}))))):null};function u(e){var n=(0,s.N)(e.componentName)[0],t=n.description,l=n.displayName,u=n.props,m="How to use the "+l+" component",p="Full code for the "+l+" component";return i.createElement(i.Fragment,null,t,i.createElement("br",null),i.createElement("br",null),i.createElement(o.Z,null,i.createElement(a.Z,{value:"props",label:"Properties"},i.createElement(c,{props:u})),i.createElement(a.Z,{value:"example",label:"Example"},e.example&&i.createElement(r.Z,{title:m,className:"language-tsx test"},e.example)),i.createElement(a.Z,{value:"code",label:"Source Code"},e.codeString&&i.createElement(r.Z,{title:p,className:"language-tsx"},e.codeString)),i.createElement(a.Z,{value:"accessibility",label:"Accessibility"},i.createElement("pre",{className:"preText"},e.accessibilityInfo))))}},82224:function(e,n,t){t.d(n,{N:function(){return r}});var i=t(28084),r=function(e){return(0,i.default)()["docusaurus-plugin-react-docgen-typescript"].default.filter((function(n){return n.displayName===e}))}},23583:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return c},default:function(){return C},exampleString:function(){return p},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return m}});var i=t(87462),r=t(63366),o=(t(67294),t(3905)),a=(t(19055),t(38909)),s=["components"],l={},c=void 0,u={unversionedId:"Engineering/FrontEnd/ComponentsSection/Buttons and Links/CrisisLineCta",id:"Engineering/FrontEnd/ComponentsSection/Buttons and Links/CrisisLineCta",title:"CrisisLineCta",description:"",source:"@site/docs/Engineering/FrontEnd/ComponentsSection/Buttons and Links/CrisisLineCta.mdx",sourceDirName:"Engineering/FrontEnd/ComponentsSection/Buttons and Links",slug:"/Engineering/FrontEnd/ComponentsSection/Buttons and Links/CrisisLineCta",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/ComponentsSection/Buttons and Links/CrisisLineCta",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ClickToCallPhoneNumber",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/ComponentsSection/Buttons and Links/ClickToCallPhoneNumber"},next:{title:"CtaButton",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/ComponentsSection/Buttons and Links/CtaButton"}},m=[],p="<CrisisLineCta onPress={onCrisisLine} />",d={toc:m,exampleString:p};function C(e){var n=e.components,t=(0,r.Z)(e,s);return(0,o.kt)("wrapper",(0,i.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)(a.Z,{componentName:"CrisisLineCta",example:p,codeString:"import { useTranslation } from 'react-i18next'\nimport React, { FC } from 'react'\n\nimport { CtaButton, TextView } from 'components/index'\nimport { NAMESPACE } from 'constants/namespaces'\n\n/**\n *  Signifies the props that need to be passed in to {@link CrisisLineCta}\n */\nexport type CrisisLineCtaProps = {\n  /** function called when the banner is pressed */\n  onPress: () => void\n}\n\n/**\n * Reusable Crisis Line component that shows up as a 'sticky' on the Home screen\n *\n * @returns CrisisLineCta component\n */\nconst CrisisLineCta: FC<CrisisLineCtaProps> = ({ onPress }) => {\n  const { t } = useTranslation(NAMESPACE.HOME)\n\n  const props = { onPress }\n\n  return (\n    <CtaButton {...props}>\n      <TextView color=\"primaryContrast\" variant=\"MobileBody\">\n        {t('component.crisisLine.talkToThe')}\n      </TextView>\n      <TextView color=\"primaryContrast\" variant=\"MobileBodyBold\">\n        &nbsp;{t('component.crisisLine.veteranCrisisLine')}\n      </TextView>\n      <TextView color=\"primaryContrast\" variant=\"MobileBody\">\n        &nbsp;{t('component.crisisLine.now')}\n      </TextView>\n    </CtaButton>\n  )\n}\n\nexport default CrisisLineCta\n",mdxType:"ComponentTopInfo"}))}C.isMDXComponent=!0}}]);