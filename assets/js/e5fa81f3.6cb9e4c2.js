"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7056],{7080:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return g},default:function(){return p},exampleString:function(){return c},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return m}});var s=n(7462),a=n(3366),r=(n(7294),n(3905)),o=(n(9055),n(8909)),i=["components"],l={},g=void 0,d={unversionedId:"Engineering/FrontEnd/ComponentsSection/MessageAlert",id:"Engineering/FrontEnd/ComponentsSection/MessageAlert",isDocsHomePage:!1,title:"MessageAlert",description:"export const exampleString = `<MessageAlert",source:"@site/docs/Engineering/FrontEnd/ComponentsSection/MessageAlert.mdx",sourceDirName:"Engineering/FrontEnd/ComponentsSection",slug:"/Engineering/FrontEnd/ComponentsSection/MessageAlert",permalink:"/docs/Engineering/FrontEnd/ComponentsSection/MessageAlert",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"LoadingComponent",permalink:"/docs/Engineering/FrontEnd/ComponentsSection/LoadingComponent"},next:{title:"MessageList",permalink:"/docs/Engineering/FrontEnd/ComponentsSection/MessageList"}},m=[],c="<MessageAlert\nhasValidationError={formContainsError}\nsaveDraftAttempted={onSaveDraftClicked}\nsaveDraftFailed={saveDraftFailed}\nsavingDraft={savingDraft}\nsendMessageFailed={sendMessageFailed}\n/>",f={toc:m,exampleString:c};function p(e){var t=e.components,n=(0,a.Z)(e,i);return(0,r.kt)("wrapper",(0,s.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(o.Z,{componentName:"MessageAlert",example:c,codeString:"import React, { FC } from 'react'\n\nimport { AlertBox, Box } from './index'\nimport { ClickToCallPhoneNumber, LoadingComponent } from 'components'\nimport { NAMESPACE } from 'constants/namespaces'\nimport { a11yHintProp } from 'utils/accessibility'\nimport { useTheme, useTranslation } from 'utils/hooks'\n\nexport type MessageAlertProps = {\n  /**sets if there is validation errors */\n  hasValidationError?: boolean\n  /**sets if attempted to save a draft */\n  saveDraftAttempted?: boolean\n  /**sets if saving the drft was complete*/\n  saveDraftComplete?: boolean\n  /**sets if saving the draft failed */\n  saveDraftFailed?: boolean\n  /**sets that the draft is being saved*/\n  savingDraft?: boolean\n  /**sets that the message failed on send*/\n  sendMessageFailed?: boolean\n}\n\n/**Common component to show a message alert when saving or sending a secure message */\nconst MessageAlert: FC<MessageAlertProps> = ({ hasValidationError, saveDraftAttempted, saveDraftComplete, saveDraftFailed, savingDraft, sendMessageFailed }) => {\n  const theme = useTheme()\n  const t = useTranslation(NAMESPACE.HEALTH)\n  const th = useTranslation(NAMESPACE.HOME)\n\n  let title\n  let text\n  let textA11yLabel\n\n  if (savingDraft) {\n    return <LoadingComponent text={t('secureMessaging.formMessage.saveDraft.loading')} />\n  } else if (hasValidationError) {\n    title = saveDraftAttempted ? t('secureMessaging.formMessage.saveDraft.validation.title') : t('secureMessaging.formMessage.checkYourMessage')\n    text = saveDraftAttempted ? t('secureMessaging.formMessage.saveDraft.validation.text') : undefined\n  } else if (sendMessageFailed) {\n    title = t('secureMessaging.sendError.title')\n    text = t('secureMessaging.sendError.ifTheAppStill')\n    textA11yLabel = t('secureMessaging.sendError.ifTheAppStill.a11y')\n  } else if (saveDraftFailed) {\n    title = t('secureMessaging.formMessage.saveDraft.failed.title')\n    text = t(t('secureMessaging.formMessage.saveDraft.failed.text'))\n  } else if (saveDraftComplete) {\n    title = t('secureMessaging.formMessage.saveDraft.success.title')\n  } else {\n    return null\n  }\n\n  return (\n    <Box mx={theme.dimensions.gutter} mb={theme.dimensions.standardMarginBetween}>\n      <AlertBox border={saveDraftComplete ? 'success' : 'error'} background=\"noCardBackground\" title={title} text={text} textA11yLabel={textA11yLabel} titleRole={'header'}>\n        {sendMessageFailed && <ClickToCallPhoneNumber phone={t('common:8773270022.displayText')} {...a11yHintProp(th('veteransCrisisLine.callA11yHint'))} />}\n      </AlertBox>\n    </Box>\n  )\n}\nexport default MessageAlert\n",mdxType:"ComponentTopInfo"}))}p.isMDXComponent=!0}}]);